<p>Qu&rsquo;est-ce qu&rsquo;une carte de test ?</p>,"<p>C&rsquo;est un superbe gachi de temps car trop compliqué. Finalement pas tant que ça en vrai. Parce qu&rsquo;en vrai c&rsquo;est plutôt simple je trouve.<br />
Après ça dépend.</p>",Code::Python::Python,Python
<p>Est-ce que le langage Python a des spécificateur d&rsquo;accès ?</p>,"<p>Le Python est un langage orienté objet, bien qu&rsquo;il n&rsquo;est pas de spécificateur d&rsquo;accès (public, private, etc).</p>",Code::Python::Python,Python
<p>Qu&rsquo;est-ce qu&rsquo;un fichier pyc ?</p>,"<p>C&rsquo;est un fichier bytecode généré par l&rsquo;interpreteur Python quand un module est exécuté ou importé. Ce fichier permet à l&rsquo;interpréteur d&rsquo;exécuter le code à nouveau, s&rsquo;il n&rsquo;a pas été modifié, sans passer par l&rsquo;étape de vérification syntaxique, etc.</p>",Code::Python::Python,Python
<p>Qu&rsquo;est-ce que PEP8 ?</p>,<p>C&rsquo;est une convention de codage utilisé pour le code dans la librairie standard de Python.</p>,Code::Python::Python,Python
<p>Qu&rsquo;est-ce qu&rsquo;une annotation de fonction ?</p>,"<p>Une annotation de fonction permet d&rsquo;ajouter des informations aux paramètres et type de retour d&rsquo;une fonction afin d&rsquo;être utilisé par des librairies externe par parser le code et fournir des informations supplémentaire, comme une aide.<br />
Ces annotations ne sont pas utilisées par Python et sont complètements optionnelles, la seul chose que fait l’interpréter c&rsquo;est de rendre ce informations disponibles.<br />
La syntaxe ainsi que le traitement de ces annotations ne sont défini que par des librairies externes.<br />
La annotations sont disponibles après compilation via un dictionnaire stocké dans l&rsquo;attribut <code>__annotations__</code> de l&rsquo;objet fonction.<br />
<a href=""https://peps.python.org/pep-3107/#fundamentals-of-function-annotations"">Source</a></p>",Code::Python::Python,Python
"<p>Qu&rsquo;est-ce que <code>str</code>, <code>int</code> et <code>-&gt;</code> dans la ligne de code <code>def func(a: str, b: int) -&gt; str:</code>?</p>","<p>Ce sont des annotations de fonction qui indiquent de le paramètre a doit être un string, b doit être un integer et que la fonction renvoi un string.</p>",Code::Python::Python,Python
<p>Expliquez brièvement le processus d&rsquo;exécution d&rsquo;un fichier Python</p>,<p>Le code est lu et exécuté ligne par ligne par l’interpréteur Python. Il ne passe pas par une étape de représentation sous-forme de code machine.</p>,Code::Python::Python,Python
<p>Pouvez-vous expliquer comment une exception peut être attrapée dans un programme Python ?</p>,"<p>En entourant le code d&rsquo;un <code>try</code> et <code>except</code>. Le code dans le <code>try</code> est exécuté, et si une exception est lancé le code dans le <code>except</code> est exécuté.</p>",Code::Python::Python,Python
<p>Qu&rsquo;est-ce que Numpy ?</p>,"<p>C&rsquo;est une bibliothèque Python pour le calcul scientifique, qui propore une classe de tableau multi-dimensionnel ultra rapide à l&rsquo;aide de code C pré-compilé.</p>",Code::Python::Python,Python
<p>Qu&rsquo;est-ce l&rsquo;option python3 -m ?</p>,"<p>La commande python peut-être lancé avec l&rsquo;option -m. Si le paramètre est le nom d&rsquo;un module, c&rsquo;est-à-dire un fichier python, alors le fichier est exécuter. Du code est exécuter seulement s&rsquo;il est entre la condition <code>if __name__ == ""__main__""</code>.<br />
Si le nom est le nom d&rsquo;un package, alors le fichier <code>__main__.py</code> du package est exécuter.<br />
<a href=""https://docs.python.org/2/using/cmdline.html#cmdoption-m"">Source</a></p>",Code::Python::Python,Python
<p>Ou l&rsquo;interpréteur Python va-t-il chercher les modules à importer ?</p>,"<ul>
<li>Le répertoire courant </li>
<li>Dans chaque répertoire dans PYTHONPATH </li>
<li>Dans le chemin par défaut, /usr/local/lib/python/</li>
</ul>",Code::Python::Python,Python
<p>Qu&rsquo;est-ce que le GIL ?</p>,"<p>Global Interpreter Lock or GIL, in simple words, is a mutex (or a lock) that allows only one thread to hold the control of the Python interpreter. Making multi-threaded code impossible. Multi process plutôt que multi thread.</p>",Code::Python::Python,Python
<p>Veuillez indiquer quelques différences entre Python 2.x et 3.x ?</p>,"<ul>
<li>La division d&rsquo;integer peut donner un float..... </li>
<li>Python3 a les types byte et Utf8 </li>
<li>Python 3 is that a TypeError is raised as warning if we try to compare unorderable types.</li>
<li>En Python 2.x il faut faire hériter les classes de object pour pouvoir utiliser <code>@property</code> <code>@staticmethod</code> <code>__slots__</code>.</li>
<li>La syntaxe des meta classe est différente<br />
<a href=""https://stackoverflow.com/questions/4015417/why-do-python-classes-inherit-object"">Source</a></li>
</ul>",Code::Python::Python,Python
<p>Comment la mémoire est-elle gérée en Python ?</p>,"<p>Il y a un garbage collector. Ce qui signifie que tout les objets qui ne sont pointé par aucun pointeur sont supprimés.</p>
<p>C&rsquo;est également un langage interprété, ainsi comme l’interpréteur Python est le même sur toutes les machines, le code Python est cross-platforme. En revanche contrairement à l&rsquo;OS qui a un contrôle total, l’interpréteur ne peut pas accéder à des fonctions bas niveau, comme la gestion mémoire.</p>",Code::Python::Python,Python
<p>Qu&rsquo;est-ce qu&rsquo;un module ?</p>,"<p>Un module est un fichier qui contient des définitions et qui peut être importé dans un autre module via la commande import, afin de réutiliser le code. Le nom du module est le nom du fichier py. Il est accessible via la variable <code>__name__</code>.</p>",Code::Python::Import::Module,Python
<p>Qu&rsquo;est-ce qu&rsquo;un paquet ?</p>,<p>C&rsquo;est un ensemble de modules.</p>,Code::Python::Import::Paquet,Python
<p>Qu&rsquo;est-ce que <code>__init__</code>.py ?</p>,<p>C&rsquo;est un script nécessaire pour qu&rsquo;un dossier soit considéré comme un package. Ce script est automatiquement exécuté quand le package est importé.</p>,Code::Python::Import::Paquet,Python
<p>Qu&rsquo;est-ce que <code>__main__</code>?</p>,"<p>C&rsquo;est le nom de l&rsquo;environnement d&rsquo;exécution principale. Lorsque la commande python3 foo.py est exécutée, la variable <code>__name__</code> de foo.py devient <code>__main__</code>. Ainsi en ajoutant le code <code>if __name__ == '__main__':</code> on permet à une portion de code de ne s&rsquo;exécuter que lorsqu&rsquo;il est directement appelé, et pas quand il est importé depuis un autre module.<br />
<a href=""https://docs.python.org/3/library/__main__.html?highlight=__main__#idiomatic-usage"">Source</a></p>",Code::Python::Import::Paquet,Python
<p>Qu&rsquo;est-ce qu&rsquo;un environnement virtuel Python ?</p>,"<p>En Python, un environnement virtuel est un ensemble comprenant un interpréteur Python et des librairies, isolés les uns des autres, ce qui permet de gérer les problèmes de compatibilité entre les paquets.</p>",Code::Python::Import::Environnement_virtuel,Python
<p>Qu&rsquo;est-ce que venv ?</p>,"<p>Venv, est un module built-in open source depuis Python 3.3 qui permet de créer un environnement virtuel. Ce n&rsquo;est pas un gestionnaire de package, ni un solveur de dépendance, c&rsquo;est pourquoi il doit être utilisé avec pip.</p>",Code::Python::Import::Environnement_virtuel,Python
<p>Comment activer/désactiver un environnement venv ?</p>,<p>Avec la commande source myenv/bin/activate. Pour désactiver il suffit d&rsquo;utiliser la commande deactivate.</p>,Code::Python::Import::Environnement_virtuel,Python
<p>Comment venv créer et gère un environnement virtuel ?</p>,<p>Il va simplement ajouter des chemins au path.</p>,Code::Python::Import::Environnement_virtuel,Python
<p>Qu&rsquo;est-ce que conda ?</p>,"<p>Conda peut créer des environnements virtuels pour plusieurs langages et a son propre système de paquet indépendant de pip, il ajoute un peu plus de complexité par rapport à venv. <br />
Il est open source mais avec des licences plutôt fermé. <br />
Il est le meilleur choix pour le deep learning car il contient une grande quantité de paquets dédié au deep learning et configuré correctement.</p>",Code::Python::Import::Environnement_virtuel,Python
<p>Qu&rsquo;est-ce que pipenv ?</p>,"<p>Pipenv permet de résoudre les problèmes à la fois d&rsquo;un gestionnaire de paquet et solveur de dépendance comme pip et d&rsquo;un gestionnaire d&rsquo;environnement virtuel comme venv.<br />
Il est désigné pour être une alternative simple pour les débutants.</p>",Code::Python::Import::Environnement_virtuel,Python
<p>Qu&rsquo;est-ce que Poetry ?</p>,"<p>C&rsquo;est un gestionnaire de paquet, un solveur de dépendance et un gestionnaire d&rsquo;environnement virtuel comme pipenv.</p>",Code::Python::Import::Environnement_virtuel,Python
<p>Quelle est la différence entre un gestionnaire de paquet et un gestionnaire d&rsquo;environnement virtuel ?</p>,"<p>Un gestionnaire de paquet, comme pip, permet d&rsquo;installer des paquets Python et de gérer les dépendances direct et les dépendance transitive (les dépendances de dépendance).<br />
Un environnement virtuel permet d&rsquo;installer des paquets Python mais un environnement séparer, pour avoir plusieurs configurations, une par projet.<br />
Certains utilitaires comme Conda, Pipenv ou Poetry sont les deux à la fois.</p>",Code::Python::Import::Environnement_virtuel,Python
<p>Qu&rsquo;est-ce que la commande pip freeze ?</p>,<p>Cette commande permet de lister tous les paquets installé ainsi que leur version. Cette commande permet notamment de créer le fichier requirements.txt.</p>,Code::Python::Import::Import,Python
<p>Qu&rsquo;est-ce que requirements.txt ? Comment l&rsquo;utiliser ?</p>,"<p>C&rsquo;est un fichier avec une liste de nom de paquet et leur version, au format package == 1.0.0. Il est possible d&rsquo;installer tous les paquets d&rsquo;un coup avec la command pip install -r requirements</p>",Code::Python::Import::Import,Python
<p>Qu&rsquo;est-ce que la fonction <code>__init__</code>?</p>,<p>C&rsquo;est le constructeur de la classe.</p>,Code::Python::Instructions::Class,Python
<p>Comment lancer une exception en Python ?</p>,"<p>En Python on lance une exception avec la commande raise.<br />
Et pas throw, ça c&rsquo;est en C++.</p>",Code::Python::Instructions::Raise,Python
<p>Comment créer une exception custom en Python ?</p>,"<p>On fait hériter une class de la classe Exception, et on édite l&rsquo;attribut message.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">class</span> <span style=""color: #0000FF; font-weight: bold"">MarkdownSyntaxException</span>(<span style=""color: #CB3F38; font-weight: bold"">Exception</span>):
    <span style=""color: #008000; font-weight: bold"">def</span> <span style=""color: #0000FF"">__init__</span>(<span style=""color: #008000"">self</span>, lineIndex, filename, exception):
        <span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>message <span style=""color: #666666"">=</span> <span style=""color: #BA2121"">&quot;[&quot;</span><span style=""color: #666666"">+</span>exception<span style=""color: #666666"">+</span><span style=""color: #BA2121"">&quot;] at line [&quot;</span><span style=""color: #666666"">+</span><span style=""color: #008000"">str</span>(<span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>lineIndex)<span style=""color: #666666"">+</span><span style=""color: #BA2121"">&quot;] of file [&quot;</span><span style=""color: #666666"">+</span>filename<span style=""color: #666666"">+</span><span style=""color: #BA2121"">&quot;]&quot;</span>
</code></pre></div>

<p><a href=""https://stackoverflow.com/questions/1319615/proper-way-to-declare-custom-exceptions-in-modern-python"">Source</a></p>",Code::Python::Instructions::Raise,Python
<p>En Python les arguments d&rsquo;une fonction sont-ils passés par référence ou par valeur ?</p>,<p>Les arguments sont passés comme affectation de variable. Donc par copie pour les types primitifs et par référence pour les types composés.</p>,Code::Python::Instructions::Def,Python
"<p>Dans une fonction, quelle est la signification de *args et **kwargs ?</p>","<p>L&rsquo;astérisque *args est utilisé dans la définition d&rsquo;une fonction lorsque vous n&rsquo;êtes pas sûr·e du nombre d&rsquo;arguments que vous pourriez avoir à passer à une certaine fonction. Le double astérisque **kwargs vous permet d&rsquo;envoyer des arguments nommés à une fonction, qui peut contenir autant d&rsquo;arguments que vous le souhaitez.</p>",Code::Python::Instructions::Def,Python
"<p>Quelle serait la sortie de ce code ? def f(a,list=[]): for i in range(a): list.append(i*i) print(list) f(3) f(2,[1,2,3]) f(2)</p>","<p>[0, 1, 4] [1, 2, 3, 0, 1] [0, 1, 4, 0, 1] L&rsquo;objet &ldquo;list&rdquo; n&rsquo;est créé qu&rsquo;une fois, à la création de la fonction.</p>",Code::Python::Instructions::Def,Python
<p>Qu&rsquo;est-ce que la fonction enumerate ?</p>,<p>C&rsquo;est une fonction qui renvoi une liste avec les objets contenant un object iterable ainsi qu&rsquo;une valeur pour indiquer l&rsquo;index.</p>,Code::Python::Instructions::Enumerate,Python
<p>Quels paramètres peut prendre enumerate ?</p>,"<p>Enumerate prend l&rsquo;objet à itérer en paramètre.<br />
Elle peut également prendre un paramètre optionnel qui permet de démarrer le compteur à une valeur précise.</p>",Code::Python::Instructions::Enumerate,Python
<p>Qu&rsquo;est-ce qu&rsquo;un décorateur ?</p>,<p>C&rsquo;est un moyen d&rsquo;encapsuler une fonction dans une fonction.</p>,Code::Python::Instructions::@,Python
<p>Qu&rsquo;est-ce qu&rsquo;un descripteur ? Quel est son usage ?</p>,"<p>Un descripteur est une classe qui implémente l&rsquo;une des fonctions <code>__get__</code>, <code>__set__</code> ou <code>__delete__</code>.<br />
Un descripteur permet à l&rsquo;objet stocké dans une classe d&rsquo;exécuter du code à l&rsquo;insertion, l&rsquo;accession ou la délétion de ce dernier.<br />
Un descripteur ne fonctionne que lorsqu&rsquo;il est l&rsquo;attribut d&rsquo;une classe, et ne peut être invoquer que par l&rsquo;opérateur point.<br />
<a href=""https://docs.python.org/3/howto/descriptor.html#simple-example-a-descriptor-that-returns-a-constant"">Source</a></p>",Code::Python::Instructions::Descripteurs,Python
<p>Qu&rsquo;est-ce que la fonction <code>__get__</code>? Quels sont ses paramètres ?</p>,"<p>Il s&rsquo;agit d&rsquo;une fonction built-in des descripteurs, qui permet de définir le code exécuter lorsque le descripteur stocké dans une classe est accédé.<br />
Ces paramètres sont:</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">def</span> <span style=""color: #0000FF"">__set_name__</span>(<span style=""color: #008000"">self</span>, obj, objetype<span style=""color: #666666"">=</span><span style=""color: #008000; font-weight: bold"">None</span>):
</code></pre></div>

<p>Avec obj la classe qui contient le descripteur.</p>",Code::Python::Instructions::Descripteurs,Python
<p>Qu&rsquo;est-ce que la fonction <code>__set_name__</code>? Quels sont ses paramètres ?</p>,"<p>Il s&rsquo;agit d&rsquo;une fonction built-in des descripteurs, qui est exécuter à l&rsquo;instanciation de la classe appelante, qui permet de récupérer le nom de la variable dans l&rsquo;instance de la classe qui contient le descripteur.<br />
Ces paramètres sont:</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">def</span> <span style=""color: #0000FF"">__set_name__</span>(<span style=""color: #008000"">self</span>, owner, name):
    <span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>public_name <span style=""color: #666666"">=</span> name
    <span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>private_name <span style=""color: #666666"">=</span> <span style=""color: #BA2121"">&#39;_&#39;</span> <span style=""color: #666666"">+</span> name
</code></pre></div>

<p><a href=""https://docs.python.org/3/howto/descriptor.html#customized-names"">Source</a></p>",Code::Python::Instructions::Descripteurs,Python
<p>Comment créer un attribut read only dans une classe ?</p>,"<p>Soit un attribut x que l&rsquo;on souhaite privé, on le nomme <code>_x</code> dans la classe puis on créer une fonction d&rsquo;accès avec un décorateur <code>@property</code> qui renvoi <code>_x</code>. Ainsi le setter n&rsquo;est pas défini, mais le getter x renvoi bien <code>_x</code>.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #AA22FF"">@property</span>
<span style=""color: #008000; font-weight: bold"">def</span> <span style=""color: #0000FF"">x</span>(<span style=""color: #008000"">self</span>):
    <span style=""color: #008000; font-weight: bold"">return</span> <span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>_x
</code></pre></div>

<p><a href=""https://stackoverflow.com/questions/14594120/when-should-an-attribute-be-private-and-made-a-read-only-property"">Source</a></p>",Code::Python::Instructions::Descripteurs,Python
<p>Qu&rsquo;est-ce que la fonction property() ?</p>,"<p>C&rsquo;est une fonction qui renvoi objet descripteur. Ce dernier a logiquement les fonctions built-in <code>__get__</code>, <code>__set__</code> et <code>__delete__</code>. Il contient également les fonctions getter, setter et deleter, qui renvoient une copy du descripteur, mais avec les fonctions get, set et/ou delete remplacé par une fonction passée en paramètre. Lorsque ces fonctions (getter, setter et deleter) sont utilisés comme décorateur, ils renvoient un nouveau descripteur dans lequel la fonction respective est remplacée par la fonction utilisé par le décorateur.</p>",Code::Python::Instructions::Descripteurs,Python
<p>Comment modifier le setter d&rsquo;un attribut dans une classe ?</p>,"<p>On utilise la fonction setter dans un décorateur, après la définition de property.<br />
C&rsquo;est possible car @property assigne à x un objet descripteur. Ce descripteur a logiquement les fonctions built-in <code>__get__</code>, <code>__set__</code> et <code>__delete__</code>. Il contient également les fonctions getter, setter et deleter, qui permettent de remplacer les fonctions get, set et delete. Lorsque ces fonctions (getter, setter et deleter) sont utilisés comme décorateur, comme c&rsquo;est le cas de la fonction setter dans l&rsquo;exemple, le setter est remplacé par la fonction utilisé par le décorateur.<br />
L&rsquo;implémentation de property est disponible en source.<br />
<a href=""https://docs.python.org/3/howto/descriptor.html#pure-python-equivalents"">Source</a>.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #AA22FF"">@property</span>
<span style=""color: #008000; font-weight: bold"">def</span> <span style=""color: #0000FF"">x</span>(<span style=""color: #008000"">self</span>):
    <span style=""color: #008000; font-weight: bold"">return</span> <span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>_x

<span style=""color: #AA22FF"">@x</span><span style=""color: #666666"">.</span>setter
<span style=""color: #008000; font-weight: bold"">def</span> <span style=""color: #0000FF"">x</span>(<span style=""color: #008000"">self</span>, x):
    <span style=""color: #008000; font-weight: bold"">return</span> <span style=""color: #008000"">self</span><span style=""color: #666666"">.</span>_x <span style=""color: #666666"">=</span> x
</code></pre></div>",Code::Python::Instructions::Descripteurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;un gestionnaire de contexte ?</p>,"<p>Un objet gestionnaire de contexte est un objet qui implémente les fonctions <code>__enter__</code> et <code>__exit__</code> et qui permet de les invoquer avec le mot clé <code>with</code> à sa création. Le code dans les fonctions est alors exécuter à la création et la destruction de l&rsquo;objet.<br />
<a href=""https://zestedesavoir.com/tutoriels/954/notions-de-python-avancees/3-further/2-context-managers"">Source</a></p>
<p>Il est possible de facilement transformer un gestionnaire de contexte en décorateur avec le module <a href=""https://docs.python.org/3/library/contextlib.html""><code>contextlib</code></a> de la lib standard.</p>",Code::Python::Instructions::With,Python
<p>Qu&rsquo;est-ce que l&rsquo;instruction <code>with</code>?</p>,"<p><code>with as</code> permet d&rsquo;encapsuler l&rsquo;exécution d&rsquo;un bloque avec les fonctions <code>__enter__</code> et <code>__exit__</code> d&rsquo;un objet gestionnaire de contexte.<br />
<a href=""https://docs.python.org/fr/3/reference/compound_stmts.html#the-with-statement"">Source</a><br />
<a href=""https://zestedesavoir.com/tutoriels/954/notions-de-python-avancees/3-further/2-context-managers"">Source</a></p>",Code::Python::Instructions::With,Python
<p>Comment ouvrir un fichier en Python en écriture et/ou en lecture ?</p>,"<p>Avec la commande open et with, r pour lire et w pour écrire.<br />
with open(&ldquo;filename&rdquo;, &ldquo;r&rdquo;) as file:</p>",Code::Python::Instructions::Open,Python
<p>Comment lire un fichier ligne à ligne ?</p>,"<p>Avec la fonction readline, qui lit la prochaine ligne du fichier.</p>",Code::Python::Instructions::Open,Python
<p>Comment lire toutes les lignes d&rsquo;un fichier ?</p>,<p>Avec la fonction readlines.</p>,Code::Python::Instructions::Open,Python
"<p>Comment accédé aux différents composants (jour, mois, année,&hellip;) d&rsquo;une données de date ? Quelle syntaxe pour récupérer la date d&rsquo;une série &ldquo;A&rdquo; ?</p>","<p>Pour extraire les composants d&rsquo;une donnée de date/durée, etc, on utilise la fonction accesseur .dt.<br />
La syntaxe pour récupérer la date est df[&ldquo;A&rdquo;].dt.date.<br />
<a href=""https://pandas.pydata.org/docs/user_guide/basics.html#dt-accessor"">Source</a><br />
<a href=""https://pandas.pydata.org/docs/user_guide/timeseries.html#time-date-components"">Source</a></p>",Code::Python::Pandas::Datetime_data,Python
"<p>Avec Pandas, comment convertir un str en datetime ?</p>","<p>Avec la fonction to_datetime, sans oublié le paramètre format=&rdquo;&ldquo;.</p>",Code::Python::Pandas::Datetime_data,Python
<p>Qu&rsquo;est-ce que la fonction Loc ?</p>,"<p>Loc permet de sélectionner un groupe de ligne ou de colonne.<br />
La sélection peut se faire par label, par slice, par condition.</p>",Code::Python::Pandas::Sélection_de_données,Python
<p>Avec Pandas comment sélectionner les lignes 10 à 20 ?</p>,"<p>df.iloc[10:20], la fonction iloc permet de sélectionner des lignes ou colonnes par index.</p>",Code::Python::Pandas::Sélection_de_données,Python
"<p>Avec Pandas comment sélectionner les colonnes 1, 2 et 5 ?</p>","<p>df.iloc[:, [1, 2, 5] ]</p>",Code::Python::Pandas::Sélection_de_données,Python
"<p>Avec Pandas que fait la fonction df.loc[df[&lsquo;a&rsquo;] &gt; 10, [&lsquo;a’, &lsquo;c&rsquo;] ] ?</p>","<p>Cette fonction sélectionne les colonnes a et c, des lignes dont la valeur a est supérieur à 10.</p>",Code::Python::Pandas::Sélection_de_données,Python
<p>Dans Pandas qu&rsquo;est-ce que la fonction groupby ?</p>,"<p>La fonction groupby permet de grouper les lignes entre elle pour appliquer une fonction à un groupe complet. Par exemple sommer les lignes.<br />
<a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html#pandas-dataframe-groupby"">Source</a></p>",Code::Python::Pandas::Groupby,Python
<p>Que passer en paramètre de la fonction groupby ?</p>,"<p>Il est possible de passer une Serie en paramètre, dans ce cas les lignes seront groupé en fonction de la valeur de la série, toutes les séries similaire seront groupés.<br />
Il est également possible de passer une fonction.<br />
<a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html#pandas-dataframe-groupby"">Source</a></p>",Code::Python::Pandas::Groupby,Python
"<p>Que fait la fonction pd.concat([df1,df2]) ?</p>","<p>![[concat1.png]]<br />
Append rows of DataFrames.</p>",Code::Python::Pandas::Reshaping_data,Python
"<p>Avec Panda, quelle fonction permet d&rsquo;effectuer cette opération ? <br> ![[concat2.png]]</p>","<p>La fonction pd.concat([df1,df2], axis=1)</p>",Code::Python::Pandas::Reshaping_data,Python
"<p>Avec Pandas, l&rsquo;axe 1 fait référence aux lignes ou aux colonnes ?</p>",<p>![[numpy3D.png]]</p>,Code::Python::Pandas::Pandas,Python
<p>Est-ce une bonne idée d&rsquo;ajouter des données à un dataframe Pandas ligne par ligne ? Pourquoi ?</p>,"<p>NON, pour ajouter des données ligne par ligne il faut passer par une liste.<br />
En utilisant un loc ou un append, la mémoire et réallouer à chaque opération, dans une boucle la complexité est quadratique.<br />
<a href=""https://stackoverflow.com/questions/13784192/creating-an-empty-pandas-dataframe-and-then-filling-it"">Source</a></p>",Code::Python::Pandas::Pandas,Python
<p>Qu&rsquo;est-ce qu&rsquo;une variable immutable ?</p>,"<p>Certains types peuvent changer leur valeur, c&rsquo;est-à-dire qu&rsquo;ils sont mutables, et d&rsquo;autres ne peuvent pas changer leur valeur, ils sont immutables.</p>",Code::Python::Variables::Variables,Python
<p>Qu&rsquo;est-ce qu&rsquo;une list ?</p>,"<p>Une liste est une séquence mutable utilisé pour stocker des données homogènes, avec un accès séquentiel via un index.<br />
<a href=""https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range"">Source</a></p>",Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce que la fonction l.count(x) ?</p>,<p>Renvoi le nombre d&rsquo;occurrence de l.</p>,Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce que la fonction l.index(x) ? Quand produit-elle une erreur ?</p>,<p>Elle renvoi l&rsquo;index de x dans la liste. Attention cette fonction renvoi une erreur si x n&rsquo;est pas dans la liste.</p>,Code::Python::Variables::Conteneurs,Python
"<p>Qu&rsquo;est-ce qu&rsquo;une compréhension de liste et pourquoi l&rsquo;utiliser, le cas échéant ?</p>",<p>La compréhension de liste définie des listes où chaque élément résulte d&rsquo;une opération effectuée sur chaque élément d&rsquo;une autre liste ou d&rsquo;une séquence.</p>,Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;un tuple ?</p>,"<p>Un tuple est une séquence immutable utilisé pour stocker des données hétérogènes (comme un couple clé valeur) ou si des données homogènes doivent être immutables.<br />
<a href=""https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range"">Source</a></p>",Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;un set ?</p>,"<p>Un set est un ensemble non ordonné de données hashable unique, utilisé pour supprimé des duplicata ou faire des opérations d&rsquo;Union, Intersection, etc. <br />
Un set est mutable et ne peut pas être une clé de dictionnaire.<br />
Pour créer un set on utilise la syntaxe: {&lsquo;jack&rsquo;, &lsquo;sjoerd&rsquo;}.</p>",Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;un frozen set ?</p>,<p>Un frozen set est un set immutable et donc hashable.</p>,Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;un dictionaire ?</p>,<p>Un dictionnaire map une valeur hashable avec un objet arbitraire. Il n&rsquo;a pas d&rsquo;ordre.</p>,Code::Python::Variables::Conteneurs,Python
<p>Quelle contrainte doit respecter une variable pour être utilisée comme clé d&rsquo;un dictionnaire ?</p>,<p>Il faut que la variable soit hashable.</p>,Code::Python::Variables::Conteneurs,Python
<p>Est-il possible d&rsquo;avoir deux clés identiques dans un dictionnaire ?</p>,<p>Non.</p>,Code::Python::Variables::Conteneurs,Python
<p>Peut-on utiliser un objet mutable comme clé d&rsquo;un dictionnaire ?</p>,"<p>Les types immutables ont la fonction hash(), qui leur permet d&rsquo;être passé comme clé d&rsquo;un dictionnaire, d&rsquo;un set ou d&rsquo;un frozenset.<br />
Les types mutables n&rsquo;ont quand à eux pas la fonction hash() et ne peuvent pas être des clés.</p>",Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;un default dict ? Et quel est son usage ? Quelle est la syntaxe ?</p>,"<p>Un default dict est une structure de donnée disponible dans le package collections, qui permet de créer une valeur par défault lorsque l&rsquo;on tente d&rsquo;accéder à une clé du dictionnaire qui n&rsquo;existe pas. La syntaxe est defaultdict(list). Par exemple pour créer un dictionnaire qui contient des listes, et qu&rsquo;on ajoute des éléments à ces listes, il est possible d&rsquo;écrire directement dict[clé] += [liste], le default dict va créer une liste vide par défaut même si la clé n&rsquo;existe pas.<br />
<a href=""https://docs.python.org/3/library/collections.html?highlight=defaultdict#collections.defaultdict"">Source</a></p>",Code::Python::Variables::Conteneurs,Python
<p>Comment itérer sur les valeurs d&rsquo;un dictionnaire ?</p>,"<p>Soit d un dictionnaire, avec la fonction items, for key, value in d.items().</p>",Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;est-ce qu&rsquo;une range ?</p>,"<p>Une range est une séquence immutable pour les boucles for.<br />
<a href=""https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range"">Source</a></p>",Code::Python::Variables::Conteneurs,Python
<p>Qu&rsquo;elle est la différence entre une copie profonde et en surface ?</p>,"<p>Quand on fait une copie superficielle, dans le cas de liste c&rsquo;est le pointeur qui est copier et pas les données. Si on modifie l&rsquo;objet original ce sera reporté sur l&rsquo;objet copier. J&rsquo;utilise une copie profonde quand je veux avoir deux objets qui ne partage pas les mêmes données.</p>",Code::Python::Variables::Conteneurs,Python
<p>Quel sont les trois types de valeurs numérique en Python ?</p>,"<p>Le int, le float et les complex.</p>",Code::Python::Variables::Variables_numériques,Python
<p>Quel est la précision maximal d&rsquo;un int ?</p>,<p>La précision d&rsquo;un int est illimité.</p>,Code::Python::Variables::Variables_numériques,Python
<p>Quel est la précision maximal d&rsquo;un float ? Comment récupérer cette valeur ?</p>,"<p>Les float sont implémenté comme des doubles en C.<br />
Il est possible d&rsquo;avoir des informations sur la précision d&rsquo;un float avec sys.float_info.</p>",Code::Python::Variables::Variables_numériques,Python
<p>Qu&rsquo;est-ce qu&rsquo;un str ?</p>,<p>Un Str est une séquence immutable de Unicode code.</p>,Code::Python::Variables::String,Python
<p>Pourquoi utiliser join pour concaténer deux str ?</p>,"<p>Concaténer deux objets immutables, avec l&rsquo;opérateur +, produit un troisième objet. Donc créer un str en concaténant plusieurs str a une complexité quadratique, c&rsquo;est pourquoi il faut utiliser str.join.</p>",Code::Python::Variables::String,Python
<p>Quel est l&rsquo;équivalent de l&rsquo;opérateur == entre deux objets ?</p>,<p>== entre deux classes est équivalent à is.</p>,Code::Python::Variables::Comparaison,Python
<p>Quelles conditions doit remplir un objet o pour que o == False soit vrai ?</p>,"<p>Par défaut toute classe est évaluer à True, à moins qu&rsquo;une fonction <code>__bool__()</code> renvoi False, OU qu&rsquo;une fonction <code>__len__()</code> renvoi 0.</p>",Code::Python::Variables::Comparaison,Python
"<p>Que renvoi l == True, si l est une liste ?</p>","<p>True si l n&rsquo;est pas vide, et False si l est vide.</p>",Code::Python::Variables::Comparaison,Python
"<p>Dans une condition a or b, les deux éléments sont-ils évalués ?</p>","<p>Non. Pour a or b, b n&rsquo;est évalué que si a est False, et pour a and b, b n&rsquo;est évaluer que si a est True.</p>",Code::Python::Variables::Comparaison,Python
<p>Comment fonctionne l&rsquo;opérateur ternaire en Python ?</p>,<p>a = b if a&gt;1 else c contrairement aux autres languages qui ont comme opérateur if a = b then a else b</p>,Code::Python::Variables::Comparaison,Python
<p>Qu&rsquo;elle est la différence entre == et is ?</p>,<p>== vérifie l&rsquo;équivalence is vérifie l&rsquo;emplacement dans la mémoire</p>,Code::Python::Variables::Comparaison,Python
<p>Quelle est la différence entre strftime et strptime ?</p>,"<p>strftime converti un datetime vers un string et strptime parse un string vers un datetime.<br />
Il y a un p pour parse, et un f pour format.</p>",Code::Python::Variables::Dates,Python
<p>Hopla une deuxième carte normalement</p>,"<p>C&rsquo;est une réponse hopla<br />
Une deuxième ligne.</p>",Code::Unsorted::unsorted,Unsorted
<p>Un test de carte avec code nested</p>,"<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #3D7B7B; font-style: italic"">// Fibonacci Series using Space Optimized Method</span>
<span style=""color: #9C6500"">#include</span><span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">&lt;bits/stdc++.h&gt;</span><span style=""color: #9C6500""></span>
<span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">namespace</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">std</span>;<span style=""color: #bbbbbb""></span>

<span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF"">fib</span>(<span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span>n)<span style=""color: #bbbbbb""></span>
{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span>a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">0</span>,<span style=""color: #bbbbbb""> </span>b<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">1</span>,<span style=""color: #bbbbbb""> </span>c,<span style=""color: #bbbbbb""> </span>i;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">if</span><span style=""color: #bbbbbb""> </span>(n<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">==</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">0</span>)<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">        </span><span style=""color: #008000; font-weight: bold"">return</span><span style=""color: #bbbbbb""> </span>a;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">for</span><span style=""color: #bbbbbb""> </span>(i<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">2</span>;<span style=""color: #bbbbbb""> </span>i<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">&lt;=</span><span style=""color: #bbbbbb""> </span>n;<span style=""color: #bbbbbb""> </span>i<span style=""color: #666666"">++</span>)<span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">        </span>c<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">+</span><span style=""color: #bbbbbb""> </span>b;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">        </span>a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>b;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">        </span>b<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>c;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span>}<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">return</span><span style=""color: #bbbbbb""> </span>b;<span style=""color: #bbbbbb""></span>
}<span style=""color: #bbbbbb""></span>

<span style=""color: #3D7B7B; font-style: italic"">// Driver code</span>
<span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF"">main</span>()<span style=""color: #bbbbbb""></span>
{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span>n<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">9</span>;<span style=""color: #bbbbbb""></span>

<span style=""color: #bbbbbb"">    </span>cout<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">&lt;&lt;</span><span style=""color: #bbbbbb""> </span>fib(n);<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">return</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">0</span>;<span style=""color: #bbbbbb""></span>
}<span style=""color: #bbbbbb""></span>

<span style=""color: #3D7B7B; font-style: italic"">// This code is contributed by Code_Mech</span>
</code></pre></div>

<p>Avec du texte après.</p>",Code::Unsorted::unsorted,Unsorted
<p>Qu&rsquo;est-ce qu&rsquo;une carte de test ?</p>,"<p>C&rsquo;est un superbe gachi de temps car trop compliqué. Finalement pas tant que ça en vrai. Parce qu&rsquo;en vrai c&rsquo;est plutôt simple je trouve.<br />
Après ça dépend.</p>",Code::Unsorted::unsorted,Unsorted
<p>Qu&rsquo;est-ce qu&rsquo;une deuxième carte de test ?</p>,"<p>C&rsquo;est vraiment pour vérifier que tout va bien.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #9C6500"">#include</span><span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">&lt;iostream&gt;</span><span style=""color: #9C6500""></span>
<span style=""color: #9C6500"">#include</span><span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">&lt;fstream&gt;</span><span style=""color: #9C6500""></span>
<span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">namespace</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">std</span>;<span style=""color: #bbbbbb""></span>

<span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF"">main</span>()<span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">  </span><span style=""color: #3D7B7B; font-style: italic"">// Create and open a text file</span>
<span style=""color: #bbbbbb"">  </span>ofstream<span style=""color: #bbbbbb""> </span>MyFile(<span style=""color: #BA2121"">&quot;filename.txt&quot;</span>);<span style=""color: #bbbbbb""></span>

<span style=""color: #bbbbbb"">  </span><span style=""color: #3D7B7B; font-style: italic"">// Write to the file</span>
<span style=""color: #bbbbbb"">  </span>MyFile<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">&lt;&lt;</span><span style=""color: #bbbbbb""> </span><span style=""color: #BA2121"">&quot;Files can be tricky, but it is fun enough!&quot;</span>;<span style=""color: #bbbbbb""></span>

<span style=""color: #bbbbbb"">  </span><span style=""color: #3D7B7B; font-style: italic"">// Close the file</span>
<span style=""color: #bbbbbb"">  </span>MyFile.close();<span style=""color: #bbbbbb""></span>
}<span style=""color: #bbbbbb""> </span>
</code></pre></div>",Code::Unsorted::unsorted,Unsorted
<p>Qu&rsquo;est-ce qu&rsquo;un arbre binaire ?</p>,"<p>Un arbre binaire est une structure de donnée ou chaque noeud à au maximum deux enfants.<br />
![[Pasted image 20230712103146.png]]</p>",Code::General::Structure_de_donnée Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;un arbre binaire équilibré ?</p>,"<p>Un arbre binaire équilibré a pour tout ses sous-arbre de gauche et de droite une différence de profondeur de 1 au maximum.<br />
L&rsquo;algorithme pour l&rsquo;équilibré se fait avec des rotations.<br />
<a href=""https://appliedgo.net/balancedtree/"">Source</a></p>",Code::General::Structure_de_donnée Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;un profiler ?</p>,<p>A profile is a set of statistics that describes how often and for how long various parts of the program executed.</p>,Code::General::Notions_générales,General
<p>Quel est la différence entre un processus et un thread ?</p>,"<p>Un processus c&rsquo;est un programme à part entière, complètement indépendant, et plus lourd à créer, il faut passer par l&rsquo;OS pour partager des infos. Un thread c&rsquo;est une autre pile et tas dans le même processus. Plusieurs thread partagent donc la même mémoire rapidement.</p>",Code::General::Notions_générales Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;une fonction lambda ?</p>,"<p>C&rsquo;est une fonction en une ligne, sans nom, pratique pour passer des petites opérations en paramètre.</p>",Code::General::Notions_générales Code::Entretien,General
<p>Quelle est la différence entre un objet et une classe ?</p>,"<p>Un classe est le plan d&rsquo;un objet et un objet est l&rsquo;instance d&rsquo;une classe.<br />
Un objet est une entité réel, une classe une entité abstraite.</p>",Code::General::Design::Orienté_objet Code::Entretien,General
<p>Quelle est la différence entre une fonction et une méthode ?</p>,<p>Une méthode est une fonction associé à un objet.</p>,Code::General::Design::Orienté_objet Code::Entretien,General
<p>Quels sont les trois types de design pattern ?</p>,"<ul>
<li>Création: objets qui instancie d&rsquo;autres objets pour donner la flexibilité de choisir quand l&rsquo;objet est nécessaire.</li>
<li>Structurel: comment composer des classes ensemble pour créer des structures plus complexes.</li>
<li>Comportemental: comment deux objets communiquent et s&rsquo;assignent des responsabilités.<br />
Il y a également 2 designs patterns spécifiques au C++: RAII et PIMPL.</li>
</ul>",Code::General::Design::Design_pattern Code::Entretien,General
<p>Donnez 5 exemples de design patterns.</p>,"<p>Creational<br />
- <a href=""https://en.wikipedia.org/wiki/Abstract_factory_pattern"" title=""Abstract factory pattern"">Abstract factory</a> groups object factories that have a common theme.<br />
- <a href=""https://en.wikipedia.org/wiki/Builder_pattern"" title=""Builder pattern"">Builder</a> constructs complex objects by separating construction and representation.<br />
- <a href=""https://en.wikipedia.org/wiki/Factory_method_pattern"" title=""Factory method pattern"">Factory method</a> creates objects without specifying the exact class to create.<br />
- <a href=""https://en.wikipedia.org/wiki/Prototype_pattern"" title=""Prototype pattern"">Prototype</a> creates objects by cloning an existing object.<br />
- <a href=""https://en.wikipedia.org/wiki/Singleton_pattern"" title=""Singleton pattern"">Singleton</a> restricts object creation for a class to only one instance.<br />
Structural<br />
- <a href=""https://en.wikipedia.org/wiki/Adapter_pattern"" title=""Adapter pattern"">Adapter</a> allows classes with incompatible interfaces to work together by wrapping its own interface around that of an already existing class.<br />
- <a href=""https://en.wikipedia.org/wiki/Bridge_pattern"" title=""Bridge pattern"">Bridge</a> decouples an abstraction from its implementation so that the two can vary independently.<br />
- <a href=""https://en.wikipedia.org/wiki/Composite_pattern"" title=""Composite pattern"">Composite</a> composes zero-or-more similar objects so that they can be manipulated as one object.<br />
- <a href=""https://en.wikipedia.org/wiki/Decorator_pattern"" title=""Decorator pattern"">Decorator</a> dynamically adds/overrides behaviour in an existing method of an object.<br />
- <a href=""https://en.wikipedia.org/wiki/Facade_pattern"" title=""Facade pattern"">Facade</a> provides a simplified interface to a large body of code.<br />
- <a href=""https://en.wikipedia.org/wiki/Flyweight_pattern"" title=""Flyweight pattern"">Flyweight</a> reduces the cost of creating and manipulating a large number of similar objects.<br />
- <a href=""https://en.wikipedia.org/wiki/Proxy_pattern"" title=""Proxy pattern"">Proxy</a> provides a placeholder for another object to control access, reduce cost, and reduce complexity.<br />
Behavioral<br />
- <a href=""https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern"" title=""Chain-of-responsibility pattern"">Chain of responsibility</a> delegates commands to a chain of processing objects.<br />
- <a href=""https://en.wikipedia.org/wiki/Command_pattern"" title=""Command pattern"">Command</a> creates objects that encapsulate actions and parameters.<br />
- <a href=""https://en.wikipedia.org/wiki/Interpreter_pattern"" title=""Interpreter pattern"">Interpreter</a> implements a specialized language.<br />
- <a href=""https://en.wikipedia.org/wiki/Iterator_pattern"" title=""Iterator pattern"">Iterator</a> accesses the elements of an object sequentially without exposing its underlying representation.<br />
- <a href=""https://en.wikipedia.org/wiki/Mediator_pattern"" title=""Mediator pattern"">Mediator</a> allows <a href=""https://en.wikipedia.org/wiki/Loose_coupling"" title=""Loose coupling"">loose coupling</a> between classes by being the only class that has detailed knowledge of their methods.<br />
- <a href=""https://en.wikipedia.org/wiki/Memento_pattern"" title=""Memento pattern"">Memento</a> provides the ability to restore an object to its previous state (undo).<br />
- <a href=""https://en.wikipedia.org/wiki/Observer_pattern"" title=""Observer pattern"">Observer</a> is a publish/subscribe pattern, which allows a number of observer objects to see an event.<br />
- <a href=""https://en.wikipedia.org/wiki/State_pattern"" title=""State pattern"">State</a> allows an object to alter its behavior when its internal state changes.<br />
- <a href=""https://en.wikipedia.org/wiki/Strategy_pattern"" title=""Strategy pattern"">Strategy</a> allows one of a family of algorithms to be selected on-the-fly at runtime.<br />
- <a href=""https://en.wikipedia.org/wiki/Template_method_pattern"" title=""Template method pattern"">Template method</a> defines the skeleton of an algorithm as an abstract class, allowing its subclasses to provide concrete behavior.<br />
- <a href=""https://en.wikipedia.org/wiki/Visitor_pattern"" title=""Visitor pattern"">Visitor</a> separates an algorithm from an object structure by moving the hierarchy of methods into one object.</p>",Code::General::Design::Design_pattern Code::Entretien,General
<p>Qu&rsquo;est-ce que la factory ?</p>,"<p>Résumé: une <a href=""https://en.wikipedia.org/wiki/Factory_method_pattern"" title=""Factory method pattern"">Factory method</a> créer des objets sans spécifier la classe exact à créer.</p>",Code::General::Design::Design_pattern Code::Entretien,General
<p>Comment fonctionne le bucket sort ?</p>,"<p>On créer k bins vides. Un bins est une range de 0 à 10 par exemple. On place chaque élément dans son bin, on tri chaque bin, puis on concatène les bins.<br />
![[Bucket sort1.png]]<br />
![[Bucket sort2.png]]</p>",Code::General::Algorithmes_généraux::Algorithme_de_tri,General
"<p>Meilleur, pire et cas moyen du bucket sort</p>","<p>Moyen: n<br />
Pire: n2</p>",Code::General::Algorithmes_généraux::Algorithme_de_tri,General
<p>Quelle est la formule de la distance en un point et un plan ?</p>,"<p>p * n soit * le dot product, et n la normal au plan, normalisé.</p>",Code::General::Math::3D Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;un vecteur normalisé ?</p>,"<p>C&rsquo;est un vecteur dont la norme, c&rsquo;est-à-dire la longueur, est à 1.</p>",Code::General::Math::3D Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;un polynôme ?</p>,"<p>En <a href=""https://fr.wikipedia.org/wiki/Math%C3%A9matiques"" title=""Mathématiques"">mathématiques</a>, un <strong>polynôme</strong> est une expression formée uniquement de <a href=""https://fr.wikipedia.org/wiki/Produit_(math%C3%A9matiques)"" title=""Produit (mathématiques)"">produits</a> et de <a href=""https://fr.wikipedia.org/wiki/Somme_(arithm%C3%A9tique)"" title=""Somme (arithmétique)"">sommes</a> de constantes et d&rsquo;<a href=""https://fr.wikipedia.org/wiki/Construction_de_l%27anneau_des_polyn%C3%B4mes"" title=""Construction de l'anneau des polynômes"">indéterminées</a>.<br />
![[Pasted image 20230710093300.png]]</p>",Code::General::Math::Math_basique Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;une combinaison linéaire ?</p>,<p>Une somme de plusieurs termes eux même multiplié par une constante.</p>,Code::General::Math::Math_basique,General
<p>Qu&rsquo;est-ce qu&rsquo;un nombre complexe ? Qu&rsquo;est-ce que la partie réelle et imaginaire ?</p>,"<p>C&rsquo;est un expression sous la forme $a+ib$, avec $a$ et $b$ des réels, et $i$ un nombre imaginaire tel que $i^2=-1$. $a$ est la partie réelle et $b$ la partie imaginaire.</p>",Code::General::Math::Math_basique Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;une interpolation polynomial ?</p>,"<p>Soit un ensemble de point, c&rsquo;est chercher un polynôme qui passe par tout ces points.</p>",Code::General::Math::2D,General
<p>Qu&rsquo;est-ce qu&rsquo;une interpolation Lagrangienne ?</p>,<p>C&rsquo;est une interpolation polynomial avec des polynômes de Lagrange.</p>,Code::General::Math::2D,General
<p>Qu&rsquo;est-ce qu&rsquo;une Spline ?</p>,"<ul>
<li>Une fonction défini par morceaux par des polynômes.</li>
<li>Une façon d&rsquo;interpoler une fonction qui passe par des points qui est préféré à l&rsquo;interpolation polynomial.</li>
<li>La variable de la fonction est l&rsquo;axe x, ce qui pose problème si on veut faire une rotation de repère.</li>
</ul>",Code::General::Math::2D,General
<p>Qu&rsquo;est-ce que la continuité d&rsquo;une courbe ?</p>,"<p>C<sub>0</sub>: les polynômes passent bien par les points de jonction.<br />
C<sub>1</sub>: les polynômes sont continus sur les tangentes<br />
C<sub>2</sub>: les polynômes sont continus sur la courbure</p>",Code::General::Math::2D,General
<p>Quelles sont les limitations des Spline ?</p>,"<p>Les splines changent d&rsquo;aspect lors d&rsquo;une rotation de repère ce qui les rend inutilisable dans la plupart des cas.<br />
Les splines ont une évaluation par axe y, ce qui signifie quelles ne peuvent pas représenter des courbes qui reviennent en arrière comme des ellipses ou des courbes.<br />
Dans ce cas on utilise des B-splines ou des Nurbs.</p>",Code::General::Math::2D,General
<p>Qu&rsquo;est-ce qu&rsquo;une courbe de Bézier ?</p>,"<p>Une courbe de Bézier c&rsquo;est une somme de polynôme de Bernstein.<br />
La représentation d&rsquo;une courbe de Bézier est paramétrique, c&rsquo;est-à-dire que la variable de la fonction c&rsquo;est un avancement le long de la courbe, et pas la valeur de l&rsquo;axe en x, ce qui le rend invariable au rotation de repère.</p>",Code::General::Math::2D,General
<p>Qu&rsquo;est-ce qu&rsquo;un B-Spline ?</p>,"<ul>
<li>Une généralisation des courbes de Bézier</li>
<li>Une combinaison linéaire de Spline. Une combinaison linéaire c&rsquo;est une somme de plusieurs termes eux même multiplié par une constante.</li>
<li>C&rsquo;est une Spline qui est invariable aux rotations de repère car la variable est une valeur en 0 et 1 qui correspond à l&rsquo;avancement sur la courbe.</li>
</ul>",Code::General::Math::2D,General
<p>Qu&rsquo;est-ce qu&rsquo;une Nurbes ?</p>,"<ul>
<li>Une généralisation des B-Spline</li>
<li>Ses points sont en coordonnées homogènes</li>
<li>Elle introduit une fraction rationnelle comme poid de chaque polynome</li>
<li>Elle permet de représenter des surfaces</li>
</ul>",Code::General::Math::2D,General
<p>Quelle est la traduction d&rsquo;un byte ?</p>,<p>C&rsquo;est un octet.</p>,Code::General::Encodage::Système_de_numération Code::Entretien,General
<p>Combien de bits dans un byte ?</p>,<p>8.</p>,Code::General::Encodage::Système_de_numération Code::Entretien,General
<p>Combien de bytes dans 64 bits ?</p>,<p>8.</p>,Code::General::Encodage::Système_de_numération Code::Entretien,General
<p>Combien de bytes dans 32 bits ?</p>,<p>4.</p>,Code::General::Encodage::Système_de_numération Code::Entretien,General
<p>Quels sont les 4 systèmes de numération ?</p>,"<p>Le binaire, l&rsquo;octal, le décimal et l’hexadécimal.</p>",Code::General::Encodage::Système_de_numération Code::Entretien,General
<p>Comment fonctionne l’hexadécimal ? Comment écrire 17 ?</p>,"<p>Les chiffres ont 16 valeurs, de 0 à 15, de 0 à F.<br />
Chaque chiffre est une puissance de 16.<br />
Ainsi, pour écrire 17, on écrit 11, car 1x16<sup>1</sup>+1x16<sup>0</sup>.</p>",Code::General::Encodage::Système_de_numération Code::Entretien,General
<p>Qu&rsquo;est-ce qu&rsquo;une opérations bitwise ?</p>,<p>Les opérations bitwise sont des opérations appliqués bit à bit plutôt que sur la donnée directement.</p>,Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le complément à un d&rsquo;un nombre ?</p>,"<p>C&rsquo;est la négation bit à bit.<br />
Il s&rsquo;appel comme ça car si on lui ajoute le chiffre original on n&rsquo;a que des 1.<br />
Les vieux ordinateurs codent les nombres négatif comme ça.<br />
<a href=""https://en.wikipedia.org/wiki/Ones%27_complement"">Source</a></p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le complément à deux d&rsquo;un nombre ?</p>,"<p>Le premier bit à 0 indique un chiffre positif, et 1, négatif.<br />
Le premier bit indique en fait un valeur négative.<br />
Méthode pour coder les chiffres négatif dans les ordinateurs récent.<br />
<a href=""https://en.wikipedia.org/wiki/Two%27s_complement"">Source</a></p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que la signed magnitude ?</p>,"<p>C&rsquo;est une manière d&rsquo;encoder un chiffre négatif. Le premier bit indique le signe, 0 est positif et 1 négatif.<br />
Tout le reste ce lis normalement.</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
"<p>Comment est codé -6 en binaire avec le complément à 2, à 1 et en signed magnitude ?</p>","<p>Complément à 2<br />
1010, car -8 + 2, car le bit le plus à gauche est une valeur négative, donc -8 dans notre cas.<br />
Une autre méthode est de prendre 6: 0110, de l&rsquo;inverser, 1001 et d&rsquo;ajouter 1, 1010 ce qui nous donne bien -6.<br />
Complément à 1<br />
On prend la valeur normal, 6: 0110, et on l&rsquo;inverse, 1001.<br />
Signed magnitude<br />
On prend la valeur normal, 6: 0110, et on ajoute un 1, 1110.</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Quelles sont les 3 manières d&rsquo;encoder un entier négatif ?</p>,"<p>La manière moderne c&rsquo;est avec le complément à 2, et anciennement il y avait le complément à 1 et la signed magnitude.</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Quels sont les 6 opérations bitwise ?</p>,"<p>Il y a 6 opérations bitwises, NOT, AND, OR, XOR, left et right shift.</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le NOT bitwise ? Quelle est sa syntaxe en C ?</p>,"<p>Le NOT est l&rsquo;inverse bit à bit, la syntaxe est <code>~x</code>.<br />
~<strong>0</strong>111 = <br />
<strong>1</strong>000</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le AND bitwise ? Quelle est sa syntaxe en C ?</p>,"<p>Le AND est le et bit à bit, la syntaxe est <code>x&amp;y</code>.<br />
Une autre interprétation peut être 0 le résultat est à 0, 1 le résultat n&rsquo;est pas modifié.<br />
010<strong>1</strong> &amp; <br />
001<strong>1</strong> = <br />
000<strong>1</strong></p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que bit masking ?</p>,<p>C&rsquo;est une technique pour savoir si un bit en particulier est égal à 1. On fait l&rsquo;opération AND avec un chiffre dont tout les bit sont à 0 sauf le bit que l&rsquo;on souhaite tester. Si le résultat est différent de 0 alors le bit est à 1.</p>,Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Comment vérifier qu&rsquo;un chiffre en binaire est pair ou impair ?</p>,"<p>On vérifie que le plus petit bits soit à 0, si c&rsquo;est le cas il est pair, sinon impair.</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le OR bitwise ? Quelle est sa syntaxe en C ?</p>,"<p>Le OR est le ou bit à bit, la syntaxe est <code>x|y</code>.<br />
Une autre interprétation peut être 0 le résultat est inchangé, 1 le résultat est à 1.<br />
0<strong>101</strong> |<br />
0<strong>011</strong> =<br />
0<strong>111</strong></p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
"<p>Soit un chiffre en binaire qui représente des flags. Comment mettre un bit spécifique à 0, à 1 ou l&rsquo;inverser ?</p>","<p>Pour mettre un bit à 0 on fait un AND avec tous les bits à 1 sauf celui que l&rsquo;on souhaite.<br />
Pour mettre un bit à 1 on fait un OR avec tous les bits à 0 sauf celui que l&rsquo;on souhaite.<br />
Pour inverser un bit on fait un XOR avec tous les bits à 0 sauf celui que l&rsquo;on souhaite.</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le XOR bitwise ? Quelle est sa syntaxe en C ?</p>,"<p>Le XOR est le ou bit à bit mais quand deux 1 ce présente c&rsquo;est quand même 0, la syntaxe est <code>x|y</code>.<br />
Une autre interprétation peut être 0 le résultat est inchangé, 1 le résultat est inversé.<br />
XOR avec soit-même rend toujours 0 ce qui est pratique car plus rapide que d&rsquo;affecter une valeur pour un processeur.<br />
If the set of bit strings of fixed length <em>n</em> (i.e. <a href=""https://en.wikipedia.org/wiki/Word_(computer_architecture)"" title=""Word (computer architecture)"">machine words</a>) is thought of as an <em>n</em>-dimensional <a href=""https://en.wikipedia.org/wiki/Vector_space"" title=""Vector space"">vector space</a> F 2 n <img alt=""{\displaystyle {\bf {F}}_{2}^{n}}"" src=""https://wikimedia.org/api/rest_v1/media/math/render/svg/c04980a79072877cf9f9a06919ef85b2f8a410b9"" /> over the <a href=""https://en.wikipedia.org/wiki/Field_(mathematics)"" title=""Field (mathematics)"">field</a> <a href=""https://en.wikipedia.org/wiki/GF(2)"" title=""GF(2)"">F 2 <img alt=""{\displaystyle {\bf {F}}_{2}}"" src=""https://wikimedia.org/api/rest_v1/media/math/render/svg/b98e58c96841ebd4455d27f4f234bc812c77bef9"" /></a> , then vector addition corresponds to the bitwise XOR.<br />
0<strong>10</strong>1 ^<br />
0<strong>01</strong>1 =<br />
0<strong>11</strong>0</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que little et big endian ?</p>,"<p>La mémoire d&rsquo;un ordinateur est organisée en registre, de 16, 32 ou 64 bits suivant l&rsquo;architecture du processeur.<br />
Pour 32 bits on a 4 bytes, et ces 4 bytes ont une seul adresse mémoire et la question est dans quel sens on les ranges, avec le plus grand bytes à gauche, ou a droite ? (Attention le plus grand bytes et celui le plus à gauche). Avec Big Endian, on le place à gauche, avec little endian on le place à droite.<br />
![[Pasted image 20230712170309.png]]</p>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Qu&rsquo;est-ce que le left/right shift bitwise ? Quelle est sa syntaxe en C ?</p>,"<ul>
<li>x &lt;&lt; n : shift to left </li>
<li>x &gt;&gt; n : shift to right</li>
</ul>",Code::General::Encodage::Opération_bitwise Code::Entretien,General
<p>Quelle est la différence entre un fichier binaire et un fichier texte ?</p>,"<p>Un fichier texte est encodé en une séquence de code Unicode, donc lisible par un humain, alors qu&rsquo;un fichier binaire est directement composé de la donnée, avec une structure particulière, spécifique au format.</p>",Code::General::Encodage::Encodage Code::Entretien,General
"<p>Qu&rsquo;est-ce que Unicode, ASCII, ANSI, UTF-8 et UTF-16 ?</p>","<p>C&rsquo;est un standard pour encoder les textes. Une convention pour se mettre d&rsquo;accord sur la représentation d&rsquo;un <code>a</code>, d&rsquo;un <code>b</code> ou d&rsquo;un <code></code>.<br />
UTF-8 est une standard codé sur 1 octet, et UTF-16 sur 2 octets, mais ce dernier est très peu utilisé.<br />
ASCII n&rsquo;a pas été proposé par Unicode et propose un encodage sur 7 bits, très limité (pas d&rsquo;accent, juste Américain). Les 128 premiers symboles de UTF-8 sont compatible avec ASCII.<br />
ANSI est l&rsquo;encodage de Windows, sur 1 octet.</p>",Code::General::Encodage::Encodage Code::Entretien,General
<p>Quelle est la commande pour extraire un fichier tar.gz ? Avec le détail des options.</p>,"<p><code>tar -xvzf file -C folder</code> avec <code>x</code> pour eXtract, <code>v</code> pour verbose, <code>z</code> pour gzip, et <code>f</code> pour dire que le prochain flag est le fichier, <code>C</code> pour custom folder.</p>",Code::Linux::Linux,General
<p>Quelle est la commande pour faire un lien symbolique ?</p>,<p><code>ln -s existant lien</code></p>,Code::Linux::Linux,General
<p>Comment mettre à jour un programme vers une version plus récente d&rsquo;Ubuntu ?</p>,"<p>Pour mettre à jour un logiciel spécifique vers une meilleur version, on utilise le backport, avec la commande: sudo apt-get install PACKAGE/RELEASE-backports<br />
Avec RELEASE, la version actuelle d&rsquo;Ubuntu.<br />
<a href=""https://help.ubuntu.com/community/UbuntuBackports"">Source</a></p>",Code::Linux::Gestion_de_package::Gestion_de_package,General
<p>Comment savoir quelle version d&rsquo;un logiciel est disponible dans une version plus récente d&rsquo;Ubuntu ?</p>,"<p>On consulte le site qui répertorie tous les pakage de Ubuntu. Pour savoir si un logiciel est disponible en backport on regarde le dépôt -backport.<br />
<a href=""https://packages.ubuntu.com/"">Source</a></p>",Code::Linux::Gestion_de_package::Gestion_de_package,General
<p>Qu&rsquo;est-ce que la commande update-alternatives ?</p>,"<p>Il est possible d&rsquo;installer sur un même système plusieurs programmes qui remplissent la même fonction, comme Vim et Nano qui sont tout les deux éditeurs, ou gcc-9 et gcc-11 qui sont tout les deux des compilateurs c++. <br />
Pour indiquer au système quelle version choisir, les systèmes Debian utilisent update-alternatives, qui permet de changer la priorité de chaque programme.</p>",Code::Linux::Gestion_de_package::Update_alternatives,General
"<p>Comment configurer un nouvel éditeur de texte, ou compilateur par défaut ?</p>","<p>Avec la commande <code>sudo update-alternatives --config editor</code>,  <code>gcc</code>, ou <code>python3</code>.</p>",Code::Linux::Gestion_de_package::Update_alternatives,General
<p>Comment changer la version de gcc tout en gardant les précédentes versions disponibles ?</p>,"<p>On installe la version voulu et on utilise la commande <code>sudo update-alternatives --config</code> pour mettre à jour la version de gcc par default.<br />
<a href=""https://stackoverflow.com/questions/67298443/when-gcc-11-will-appear-in-ubuntu-repositories"">Source</a></p>",Code::Linux::Gestion_de_package::Update_alternatives,General
<p>Comment supprimer un répertoire de git sans supprimer la donnée ?</p>,<p>En utilisant la commande git rm mais avec l&rsquo;option &ndash;cached.</p>,Code::Git::Git,General
<p>Qu&rsquo;est-ce que <code>.gitattributes</code>?</p>,"<p>Ce fichier permet d&rsquo;appliquer certains attributs aux fichiers du projet quand ils sont commit.<br />
Il peut servir entre autre à convertir automatiquement les fins de lignes pour gérer tous les OS.</p>",Code::Git::Git,General
<p>Quel problème survient lorsque deux personnes sur deux OS différents travaillent sur le même dépôt Git  ? Comment corriger ce problème ?</p>,"<p>Windows et Linux/Mac ont une manière différente de gérer les fins de lignes. Pour Git qui compare les fichiers caractère par caractère c&rsquo;est un gros problème.<br />
Pour corriger ce problème on utilise <code>.gitattributes</code> qui permet de convertir automatiquement les fins de lignes.<br />
<a href=""https://docs.github.com/fr/get-started/getting-started-with-git/configuring-git-to-handle-line-endings"">Source</a></p>",Code::Git::Git,General
<p>Quelles différences entre le C et le C++ ?</p>,"<p>En C il y a une séparation des données et des fonctions, en C++ tout est encapsulé dans des classes.<br />
Le C++ est un langage orienté objet qui supporte le polymorphisme, l&rsquo;héritage, les fonctions virtuels et les smart pointers.</p>",Code::C++::C++ Code::Entretien,C++
<p>Quelles sont les versions de C++ ? Et les différence ?</p>,"<ul>
<li>C++11: les smartpointers</li>
<li>C++14: une petite maj, make_unique</li>
<li>C++17: removed std::auto_ptr, std::iterator, fold expression template, nested namespace</li>
<li>C++20: concepts</li>
</ul>",Code::C++::C++ Code::Entretien,C++
<p>Quels sont les types fondamentaux en C++ ainsi que leurs modificateurs et alias ?</p>,"<p>Deux manières d&rsquo;encoder une valeur, Integers et Floating-points.</p>
<p>Modificateurs d&rsquo;integer: <code>signed</code>/<code>unsigned</code>, et <code>short</code>/<code>long</code>/<code>long long</code>.<br />
Alias integer: <code>boolean</code> et le <code>char</code>.</p>
<p>Déclinaisons float: <code>float</code>, <code>double</code> et <code>long double</code>. </p>
<p><strong>Détails:</strong> Un float peut avoir comme valeur, 0, -0, Infinie et NaN.</p>
<p><a href=""https://en.cppreference.com/w/cpp/language/types"">Source</a></p>",Code::C++::C++ Code::Entretien,C++
<p>En C++ quelle est la taille minimal de chaque type fondamental ?</p>,"<p>La taille dépend de l&rsquo;architecture (16, 32 ou 64 bits) et du compilateur.<br />
Le standard C++ garantie des tailles minimales:<br />
Integer:<br />
- <code>char</code>: 8 bits<br />
- <code>short</code>: 16 bits<br />
- <code>int</code>: 32 bits<br />
- <code>long</code>: 32 bits<br />
- <code>long long</code>: 64 bits<br />
Float:<br />
- <code>float</code>: 32 bits<br />
- <code>double</code>: 64 bits</p>
<p><strong>Détails</strong>: Le standard C++ garantie également est <code>1 == sizeof(char) ≤ sizeof(short) ≤ sizeof(int) ≤ sizeof(long) ≤ sizeof(long long)</code>.<br />
<a href=""https://stackoverflow.com/questions/589575/what-does-the-c-standard-state-the-size-of-int-long-type-to-be"">Source</a></p>",Code::C++::C++ Code::Entretien,C++
<p>Comment est codé un float ?</p>,"<p>Théorie: a * 2<sup>b</sup> avec <code>a</code> la mantisse une valeur entre 1 et 2 et <code>b</code> le biais.</p>
<p>En mémoire:<br />
- le signe, sur un bit.<br />
- le biais, sur un unsigned integer.<br />
- la mantisse sur un integer, sans le dernier bit car il est forcément à 1.</p>
<p><strong>Détails</strong>: Cet encodage est indispensable pour encoder des valeurs très petites et très grandes.<br />
<a href=""https://stackoverflow.com/questions/7644699/how-are-floating-point-numbers-stored-in-memory"">Source</a></p>",Code::C++::C++ Code::Entretien,C++
<p>Quelles sont les valeurs spécial d&rsquo;un float ?</p>,"<p><code>-0</code>/<code>+0</code>, <code>Nan</code>, <code>+</code>/<code>-infini</code>.<br />
<a href=""https://stackoverflow.com/questions/7644699/how-are-floating-point-numbers-stored-in-memory"">Source</a></p>",Code::C++::C++ Code::Entretien,C++
<p>À quoi sert le <code>-0</code>?</p>,"<p>Le <code>-0</code> sert pour un float si la valeur est minuscule, mais qu&rsquo;il est malgré tout utile de savoir si elle est négative ou positive.</p>",Code::C++::C++ Code::Entretien,C++
<p>Quels sont les opérations de cast en C++ ?</p>,"<p><code>static_cast</code>, <code>dynamic_cast</code>, <code>reinterpret_cast</code>, <code>const_cast</code>, C-style cast <code>(T)obj</code> et le function-style cast <code>T(obj)</code>.</p>",Code::C++::C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce que le <code>static_cast</code>?</p>,"<p>Le <code>static_cast</code> explicite une conversion implicite, comme une conversion int float. Le plus souvent ça permet uniquement d&rsquo;éviter l&rsquo;ancien style <code>int a = (int)b;</code> ou <code>int a = int(b)</code>, qui est problématique car il peut devenir un <code>reinterpret_cast</code>.</p>",Code::C++::C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce que le <code>const_cast</code>?</p>,<p>Le <code>const_cast</code> ajoute ou supprime un <code>const</code> à une variable.</p>,Code::C++::C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce que le <code>dynamic_cast</code>?</p>,"<p>Le <code>dynamic_cast</code> peut caster une pointeur ou une référence vers n&rsquo;importe quelle classe fille ou mère.</p>
<p><strong>Détail</strong>: Le <code>dynamic_cast</code> est plus lent que le <code>static_cast</code> et le <code>reinterpret_cast</code>. Attention à son utilisation dans du code critique.</p>",Code::C++::C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce que le <code>reinterpret_cast</code>?</p>,"<p>Le <code>reinterpret_cast</code> change directement le type d&rsquo;une variable vers un autre, sans rien faire.<br />
C&rsquo;est très dangereux, mais peut être utile pour changer des données brutes en données typé.</p>",Code::C++::C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce que <code>static_assert</code>?</p>,<p>C&rsquo;est une fonction qui fait un assert à la compilation plutôt qu&rsquo;à l&rsquo;exécution.</p>,Code::C++::C++,C++
<p>Quelles sont les différences entre un QEvent et un signal/slot ?</p>,"<p>La différence philosophique est que l&rsquo;on:<br />
- gère un QEvent<br />
- est notifié d&rsquo;un signal<br />
Un QEvent est une fonction virtuel redéfini par l&rsquo;utilisateur.</p>",Code::C++::QT::QT Code::Entretien,C++
<p>Qu&rsquo;est-ce que la Pile ?</p>,"<p>La Pile est une espace mémoire continue uniquement géré par le CPU. C&rsquo;est dans cette zone mémoire que sont stockés les variables locales, les appels de fonctions, etc. #ToDig</p>",Code::C++::Mémoire::Pile Code::Entretien,C++
<p>Comment le CPU accède à la mémoire de la Pile ?</p>,<p>Son accès est très rapide car la mémoire est continue et son accès se fait simplement par un pointeur qui indique la case mémoire locale.</p>,Code::C++::Mémoire::Pile,C++
<p>Comment est alloué l&rsquo;espace mémoire de la Pile ?</p>,"<p>La taille de l&rsquo;espace mémoire de la Pile est allouée par le compilateur #ToCheck, et ne peut donc pas être modifiée au run time.</p>",Code::C++::Mémoire::Pile,C++
<p>Qu&rsquo;est-ce que le Tas ?</p>,<p>Le Tas est une espace mémoire fragmenté géré uniquement par le programmeur. Son accès est plus lent car les données peuvent être discontinues.</p>,Code::C++::Mémoire::Tas Code::Entretien,C++
<p>Comment est gérée la taille du Tas ?</p>,<p>La taille du Tas peut changer dynamiquement au run time. #ToDig</p>,Code::C++::Mémoire::Tas,C++
<p>Comment stocker une variable dans le Tas ?</p>,"<p>Pour stocker des données dans le Tas, on déclare un pointeur (qui est lui même stocké sur la Pile), et on lui assigne un emplacement mémoire de données stockés sur le Tas. On utilise les fonctions new ou malloc.</p>",Code::C++::Mémoire::Tas Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une fuite mémoire ?</p>,"<p>La gestion manuelle de la mémoire rendu possible pas le C++ peut créer des problèmes: la fuite mémoire.<br />
Cela ce produit lorsque de la mémoire est réservé dans le Tas alors qu&rsquo;elle n&rsquo;est pas utilisée. Si on réserve une portion de mémoire via un pointeur stocké dans la Pile, puis que l&rsquo;on supprime ce pointeur de la Pile, il n&rsquo;y a plus de moyen d&rsquo;accéder à cette mémoire, qui est pourtant bien réservé dans le Tas. On perd donc de la mémoire, il y a une fuite. La mémoire est ensuite réquisitionné par l&rsquo;OS à la fin de l&rsquo;exécution du programme.</p>",Code::C++::Mémoire::Gestion_mémoire Code::Entretien,C++
<p>Comment réduire le nombre de fuites mémoires ?</p>,"<p>Pour réduire la probabilité d&rsquo;avoir ce genre de fuites, il est recommandé d&rsquo;utiliser les mécanismes suivant:<br />
- L&rsquo;idiom [[RAII]]<br />
- Les [[Smart pointeurs]]<br />
- Les conteneurs standard de la STL</p>",Code::C++::Mémoire::Gestion_mémoire Code::Entretien,C++
<p>Quelle est la différence entre new et malloc ?</p>,<p>La différence la plus notable est que new alloue la mémoire puis exécute le constructeur alors que malloc alloue juste la mémoire.</p>,Code::C++::Mémoire::Gestion_mémoire Code::Entretien,C++
<p>Qu&rsquo;est-ce que <code>void*</code>?</p>,"<p>C&rsquo;est un pointeur vers une donnée au type inconnu, qui ne peut pas être déréférencé.</p>",Code::C++::Mémoire::Gestion_mémoire Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;un shared_ptr ?</p>,"<p>Un shared_ptr est un [[Smart pointeurs]] qui désalloue la mémoire de l&rsquo;objet géré lorsque ce dernier est détruit. Contrairement au unique_ptr, cette structure permet à plusieurs pointeurs de gérer le même objet.</p>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr Code::Entretien,C++
<p>Qu&rsquo;est-ce que le comptage de référence ?</p>,"<p>Pour permettre ce mécanisme, l&rsquo;objet géré compte le nombre de pointeurs qui le gère. Lorsque plus aucun pointeur n&rsquo;existe l&rsquo;objet est détruit.</p>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr Code::Entretien,C++
<p>Quelle fonction permet de créer un shared_ptr avec un allocateur custom ?</p>,<p>Pour créer un shared_ptr on utilise la fonction std::make_shared. Pour le créer avec un allocateur custom on utilise allocate_shared.</p>,Code::C++::Mémoire::Smart_pointeurs::Shared_ptr Code::Expert,C++
<p>Comment récupérer le nombre de pointeurs qui gèrent un même objet ?</p>,<p>Pour récupérer le nombre de pointeurs qui gèrent un même objet on utilise la fonction use_count().</p>,Code::C++::Mémoire::Smart_pointeurs::Shared_ptr,C++
<p>Quels sont les deux opérateurs pour partager la gestion d&rsquo;un objet entre deux shared_ptr ?</p>,"<p>La gestion d&rsquo;un objet ne peut-être partagée avec un autre shared_ptr que part copie constructeur ou copie d&rsquo;assignation. Construire un autre shared_ptr depuis le pointeur brut (avec la fonction get) d&rsquo;un autre shared_ptr est un comportement indéfini.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code>std<span style=""color: #666666"">::</span>shared_ptr<span style=""color: #666666"">&lt;</span>T<span style=""color: #666666"">&gt;</span><span style=""color: #bbbbbb""> </span>a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>std<span style=""color: #666666"">::</span>make_shared(T());<span style=""color: #bbbbbb""></span>
std<span style=""color: #666666"">::</span>shared_ptr<span style=""color: #666666"">&lt;</span>T<span style=""color: #666666"">&gt;</span><span style=""color: #bbbbbb""> </span>b<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>a;<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">//OK</span>
std<span style=""color: #666666"">::</span>shared_ptr<span style=""color: #666666"">&lt;</span>T<span style=""color: #666666"">&gt;</span><span style=""color: #bbbbbb""> </span>b(a);<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">//OK</span>
std<span style=""color: #666666"">::</span>shared_ptr<span style=""color: #666666"">&lt;</span>T<span style=""color: #666666"">&gt;</span><span style=""color: #bbbbbb""> </span>b(a<span style=""color: #666666"">-&gt;</span>get());<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">//UB</span>
</code></pre></div>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr,C++
<p>Que fait cette ligne de code ? <code>std::shared_ptr&lt;T&gt; b(a-&gt;get());</code></p>,"<p>Ce code est comportement indéfini.<br />
La gestion d&rsquo;un objet ne peut-être partagée avec un autre shared_ptr que part copie constructeur ou copie d&rsquo;assignation.</p>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr,C++
<p>Qu&rsquo;est-ce qu&rsquo;un control block ?</p>,"<p>L&rsquo;implémentation d&rsquo;un shared pointer contient en fait deux pointeurs, le pointeur vers l&rsquo;objet et un pointeur vers un control block.<br />
Le control block est un objet qui contient plusieurs éléments, l&rsquo;objet à gérer lui-même ou un pointers vers ce dernier, le deleter, l&rsquo;allocateur, le nombre de shared_ptr puis de weak_ptr qui pointent vers l&rsquo;objet à gérer.</p>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr Code::Expert,C++
<p>Le pointeur retourné par get et celui du control block peuvent-ils être différents ?</p>,"<p>Lorsque le shared_ptr est créé avec la fonction make_shared ou allocate_shared, l&rsquo;objet et le control block sont alloués en même temps, l&rsquo;objet est donc un membre du control block. En revanche lorsque c&rsquo;est le constructeur qui est utilisé ils sont alloués séparément, dans ce cas le control block contient un pointeur vers l&rsquo;objet. Le pointeur supprimé est le pointeur DANS LE CONTROL BLOCK. Donc parfois le pointeur détruit n&rsquo;est pas celui retourné par get().</p>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr Code::Expert,C++
"<p>Soit a et b deux <code>shared_ptr</code>, quel intérêt de faire <code>a = std::move(b)</code> plutôt que <code>a=b</code>?</p>","<p>Le move est 100x plus rapide car il permet de récupérer le pointeur sans toucher au compteur de référence, plutôt que de l&rsquo;incrémenter, puis de le décrémenter.</p>",Code::C++::Mémoire::Smart_pointeurs::Shared_ptr,C++
<p>Qu&rsquo;est-ce que les smart pointeurs ?</p>,<p>Les smart pointeurs sont des structures de données qui permettent de d&rsquo;éviter les fuites en gérant automatiquement la mémoire qu&rsquo;ils pointent dans le Tas.</p>,Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs Code::Entretien,C++
<p>Quelle version de C++ introduit les smart pointers ? Dans quel header ?</p>,<p>Ces nouveaux mécanismes sont introduits en C++11 dans le header memory.</p>,Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs Code::Entretien,C++
<p>Quels sont les différents smart pointeurs ?</p>,"<p>Il existe 4 types de smart pointeurs, le [[Unique_ptr]], Shared_ptr, Weak_ptr et Auto_ptr.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs Code::Entretien,C++
<p>Comment récupérer le pointeur géré par un smart pointeur ?</p>,<p>Pour récupérer le pointeur nu on utilise la fonction <code>get()</code>.</p>,Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Comment modifier l&rsquo;objet géré par un smart pointeur ?</p>,"<p>On manipule l&rsquo;objet géré comme un pointeur normal, avec l&rsquo;opérateur <code>-&gt;</code>.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Est-il possible de transférer la gestion d&rsquo;un objet d&rsquo;un pointeur vers un autre ?</p>,"<p>Il est possible de transférer la gestion d&rsquo;un objet vers un autre pointeur, sans aucune recopie, avec la fonction std::move. Le premier pointeur est alors nullptr car il ne gère plus aucun objet.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Quelle différence entre un const ptr et un ptr const ?</p>,"<p>Un const ptr permet de rendre le pointeur constant, on ne peut plus changer vers quel objet il pointe mais on peut toujours changer l&rsquo;objet lui-même.<br />
Un ptr const empêche tout modification de l&rsquo;objet pointé, en revanche on peut changer vers quel objet le pointeur pointe, tant que l&rsquo;objet est lui aussi const.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Qu&rsquo;est-ce que la fonction reset() ?</p>,"<p>Il est possible de remplacer l&rsquo;objet gérer par un smart pointeur avec une instance nouvellement créé en utilisant la fonction reset, avec pour paramètre l&rsquo;adresse du nouvel objet à gérer. L&rsquo;ancien objet est détruit, dans le cas d&rsquo;un unique_ptr.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Dans quel cas peut-on appeler la fonction reset ? Avec const ptr ou ptr const ?</p>,"<p>Il n&rsquo;est donc pas possible d&rsquo;appeler la fonction reset si le pointeur est de type const ptr, car le pointeur va pointer vers des données différentes. En revanche c&rsquo;est possible avec un pointeur ptr const, car comme un objet est recréé, les données de l&rsquo;objet géré ne sont pas édité.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Quelle est la limite de taille pour une liste chaîné constituée de <code>shared_ptr</code>?</p>,"<p>Si la liste est trop grande, les destructeurs des <code>shared_ptr</code>vont s&rsquo;appeler récursivement et faire exploser la pile. Il faut donc créer un destructeur pour la liste qui détruit ses noeuds dans une boucle simple.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Est-il important d&rsquo;initialiser un smart pointer à <code>nullptr</code>?</p>,"<p>Non, le constructeur par défaut d&rsquo;un smart pointeur est à <code>nullptr</code>.</p>",Code::C++::Mémoire::Smart_pointeurs::Smart_pointeurs,C++
<p>Qu&rsquo;est-ce qu&rsquo;un unique_ptr ?</p>,<p>Un unique_ptr est un [[Smart pointeurs]] qui désalloue automatiquement la mémoire si l&rsquo;objet qui est gérer est détruit ou si un autre objet est assigné au pointeur. Il est le seul qui pointe l&rsquo;objet.</p>,Code::C++::Mémoire::Smart_pointeurs::Unique_ptr Code::Entretien,C++
<p>Quelle fonction construit un unique_ptr ?</p>,<p>On déclare un unique_ptr avec la fonction std::make_unique&lt;\Type&gt;().</p>,Code::C++::Mémoire::Smart_pointeurs::Unique_ptr,C++
<p>Comment transférer la gestion d&rsquo;un objet d&rsquo;un unique_ptr A vers un autre unique_ptr B ? Que devient le pointeur A ?</p>,"<p>En utilisant std::move, le pointeur A devient nullptr.<br />
<a href=""https://stackoverflow.com/questions/26318506/transferring-the-ownership-of-object-from-one-unique-ptr-to-another-unique-ptr-i"">Source</a></p>",Code::C++::Mémoire::Smart_pointeurs::Unique_ptr,C++
<p>Dans quel cas est-il impossible de transférer la gestion d&rsquo;un unique_ptr ?</p>,<p>Ce n&rsquo;est pas possible si le pointeur est const.</p>,Code::C++::Mémoire::Smart_pointeurs::Unique_ptr,C++
<p>unique_ptr1 = unique_ptr2 transfert-t-il la gestion d&rsquo;un pointeur à l&rsquo;autre ?</p>,"<p>Non, ce code ne compilera pas, le constructeur par copy d&rsquo;un unique_ptr n&rsquo;existe pas.</p>",Code::C++::Mémoire::Smart_pointeurs::Unique_ptr,C++
<p>Qu&rsquo;est-ce qu&rsquo;un Auto_ptr ?</p>,"<p>C&rsquo;est un [[Smart pointeurs]] qui a à peu près le même fonctionnement qu&rsquo;un Unique_ptr, mais qui a été déprécié en C++11 et supprimé en C++17.</p>",Code::C++::Mémoire::Smart_pointeurs::Auto_ptr,C++
<p>Qu&rsquo;est-ce qu&rsquo;un Weak_ptr ? Dans quel cas est-il utilisé ?</p>,"<p>Un Weak_ptr est un Smart pointeurs qui permet d&rsquo;accéder à un objet mais sans affecter sa gestion mémoire. Ce pointeur permet d&rsquo;accéder à un objet uniquement si cet objet n&rsquo;a pas déjà été désallouer. La destruction d&rsquo;un Weak_ptr n&rsquo;affecte pas la désallocation. Ce type de pointeur évite les fuites mémoires au cas ou deux classes contiennent des références entre elles, c&rsquo;est une dépendance circulaire, dans ce cas la mémoire ne peut pas se libérer.</p>",Code::C++::Mémoire::Smart_pointeurs::Weak_ptr Code::Entretien,C++
<p>Donnez un exemple d&rsquo;utilisation d&rsquo;un Weak_ptr</p>,"<p>En général la classe owner possède un Shared_ptr et la sous-classe possède un Weak_ptr vers le owner.<br />
Par exemple une classe Team et une classe Member, la classe Team a des Shared_Ptr vers des Members, si un Member n&rsquo;appartient à aucune team, il est détruit. On veut un accéder à la classe Team depuis le Member, donc on place un Weak_ptr, ainsi si l&rsquo;une des Team a été détruite, on ne peut plus y accéder, mais si une Team n&rsquo;a aucun membre, elle n&rsquo;est pas détruite.<br />
<a href=""https://stackoverflow.com/questions/12030650/when-is-stdweak-ptr-useful"">Source</a></p>",Code::C++::Mémoire::Smart_pointeurs::Weak_ptr,C++
<p>Dans quelle situation le Weak_ptr empêche une fuite mémoire ?</p>,"<p>Dans le cas d&rsquo;une référence cyclique, si deux classe ont des références mutuelles avec des shared_ptr, comme avec les classes Team et Member. Si un Membre arrive out of scope, on souhaite qu&rsquo;il soit détruit que s&rsquo;il n&rsquo;appartient à aucune Team. Son deleter est appelé, si aucune Team ne référence vers lui il est détruit, tout va bien. Si une Team arrive out of scope, on souhaite que la Team soit détruite et que les Membres ne soient détruit QUE s&rsquo;ils ne sont dans aucune Team. Son deleter est donc appelé, hors son compteur de référence n&rsquo;est pas à 0 car un shared pointer est toujours contenu dans Member, la Team n&rsquo;est donc pas détruite. En changeant le pointeur dans Member par une weak_ptr, si une Team est out of scope, son compteur de référence est bien à 0 car elle ne compte pas les weak_ptr et elle est bien détruite, détruisant au passage les Membres QUE si aucune Team ne les contients.</p>",Code::C++::Mémoire::Smart_pointeurs::Weak_ptr Code::Entretien,C++
<p>Comment accède-t-on à l&rsquo;objet d&rsquo;un Weak_ptr ?</p>,"<p>Pour accèder à l&rsquo;objet d&rsquo;un Weak_ptr on vérifie d&rsquo;abord qu&rsquo;il est valide avec les fonctions expired ou lock. La fonction lock renvoi un Shared_ptr qui partage la gestion de l&rsquo;objet, si la mémoire était déjà désallouer il renvoi False. Le seul moyen d&rsquo;accéder  à l&rsquo;objet est par cette création d&rsquo;un Shared_ptr depuis le Weak_ptr.</p>",Code::C++::Mémoire::Smart_pointeurs::Weak_ptr,C++
<p>Quand le control block ce détruit lui-même ?</p>,"<p>Il est à noter que l&rsquo;objet géré par un shared_ptr est détruit lorsque le compteur de référence est à 0, en revanche le control block est conservé, jusqu&rsquo;à ce que le nombre de Weak_ptr est à 0 également.</p>",Code::C++::Mémoire::Smart_pointeurs::Weak_ptr Code::Expert,C++
<p>Quelles sont les étapes de build d&rsquo;un programme C++ ?</p>,"<p>Le build d&rsquo;un programme [[C++]] inclue trois étapes, le pré-processing, la compilation et le linkage.</p>
<h2>Le pre-processing</h2>
<hr />",Code::C++::Compilation::Build Code::Entretien,C++
<p>Qu&rsquo;est-ce que le pre-processing ?</p>,"<p>Tout d&rsquo;abord l&rsquo;étape de pré-processing remplace les directive de préprocesseur, indiqué par #Include par exemple,  par le code associé. Cette étape transforme chacun des fichier cpp en ajoutant récursivement leurs includes. #ToCheck </p>
<p><strong>Détails</strong>: Il est possible de faire des usages intelligents de certaines directives comme def, ifndef ou ifdef, pour ajouter des options au build ou changer le build suivant l&rsquo;OS.</p>",Code::C++::Compilation::Build,C++
"<p>À quoi sert <code>ifndef</code>, <code>define</code>?</p>","<p>À empêcher d&rsquo;inclure deux fois le même fichier. Ainsi si le <code>define</code> est déjà défini, la page est blanche, et n&rsquo;est pas inclue. Parfait pour éviter les inclusion récursive ou double du préprocesseur.</p>
<h2>La compilation</h2>
<hr />",Code::C++::Compilation::Build Code::Entretien,C++
<p>Qu&rsquo;est-ce que l&rsquo;étape de compilation en C++ ?</p>,<p>L&rsquo;étape de compilation transforme chacun de ces fichiers C++ pure en fichier objet .o ou .obj. Ce sont des fichiers binaires en code machine lisible directement par l&rsquo;OS.</p>,Code::C++::Compilation::Build,C++
<p>Est-il possible d&rsquo;exécuter un fichier objet ?</p>,<p>En revanche ces fichiers sont impossible à exécuter car ils contiennent des références à du code manquant. C&rsquo;est l&rsquo;étape de linkage qui va venir ajouter le code provenant d&rsquo;autres fichiers.</p>,Code::C++::Compilation::Build,C++
<p>Quelles sont les erreurs les plus courantes lors de l&rsquo;étape de compilation ?</p>,"<p>C&rsquo;est à cette étape que la plupart des erreurs sont levé, les erreurs de syntaxe, ou un overload manquant.</p>",Code::C++::Compilation::Build,C++
<p>Comment éviter de recompiler des fichiers inutilement ?</p>,"<p>Pour éviter des recompilations inutile, des utilitaires comme Make permettent de ne recompiler que les fichiers qui ont été édité. Les fichiers objets issus de fichiers non édité sont conservé. C&rsquo;est l&rsquo;un des avantages d&rsquo;avoir un &ldquo;separate compilation model&rdquo;, c&rsquo;est-à-dire de séparer les étapes de compilation et de link.</p>
<h2>Le link</h2>
<hr />",Code::C++::Compilation::Build,C++
<p>Qu&rsquo;est-ce que l&rsquo;étape de linkage ?</p>,"<p>La dernière étape est le linkage, qui prend tout les fichiers objets générés pour en faire un exécutable ou une librairie dynamic.<br />
Le linker prend toutes les références à des objets inconnus et les remplaces par les bonnes adresses des autres fichiers objets.</p>",Code::C++::Compilation::Build,C++
<p>Quelles sont les erreurs de linkage les plus courantes ?</p>,"<p>Les erreurs les plus communes sont les définitions manquantes, si le linker ne trouve pas le code associé à une référence, ou des définitions dupliqués, si le même symbol est dans deux fichiers objets différents.</p>",Code::C++::Compilation::Build,C++
<p>Quelles sont les deux types de librairies en C++ ?</p>,"<p>Il existe deux types de librairie en C++, les librairies static (.lib et .a) et les librairies dynamique (.dll et .so).</p>
<h2>Librairie statique</h2>
<hr />",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une librairie statique ?</p>,"<p>Une librairie statique est une ensemble de fichiers objets qui ne sont pas link entre eux. Ils contiennent pleins de références indéfinis, qui sont résolus au link avec d&rsquo;autres lib.<br />
Attention les headers ne sont pas inclue dans un fichier objet, il faut les inclures séparément.</p>",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Comment et par quel composant les librairies statique et dynamique sont utilisées ?</p>,"<p>Ces deux types de librairies ont une utilisation totalement différent. Une librairie statique est utilisée à l&rsquo;étape de link, tout le code est inséré dans le binaire et la librairie n&rsquo;est plus nécessaire au démarrage du programme.<br />
Une librairie dynamique est chargé en mémoire par l&rsquo;OS et link dynamiquement au démarrage.</p>",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Quels sont les avantages et les inconvénients d&rsquo;utiliser une librairie statique ?</p>,"<p>Le link static augmente la taille de l&rsquo;exécutable final, mais peut-être déployé sur une vaste majorité de configuration, notamment Linux, car il n&rsquo;y a pas de lib à chercher, tout est dans l&rsquo;exécutable.</p>
<h2>Librairie dynamique</h2>
<hr />",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une librairie dynamique ?</p>,"<p>Une librairie dynamique est un exécutable linker, avec toutes ses références connus, mais sans procédure de démarrage.<br />
Attention les headers ne sont pas inclue dans un fichier objet, il faut les inclures séparément.</p>",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Quel type de librairie est à privilégier pour une librairie conséquente ?</p>,"<p>Pour une librairie dynamique l&rsquo;OS ne peut pas savoir quelles portions de codes sont utilisés, toute la lib est donc chargée. Pour une librairie statique le link n&rsquo;inclue que qui est utilisé. Dans le cas d&rsquo;une librairie conséquente il faut privilégié le static.<br />
Il est important de noter que link une librairie static n&rsquo;importe que le code qui est appelé dans l&rsquo;application, le reste est simplement supprimé ce qui peut poser des problèmes avec les objets globaux.</p>",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Quels sont les avantages et les inconvénients d&rsquo;utiliser une librairie dynamique ?</p>,"<p>Le linkage dynamique implique que la librairie peut-être mise-à-jour depuis le moment de la conception de l&rsquo;application, ce qui peut entraîner des crashs de l&rsquo;application mais facilite la mise-à-jour. Le chargement d&rsquo;une lib dynamique dans la mémoire permet aussi son partage entre plusieurs application.</p>",Code::C++::Compilation::Librairies Code::Entretien,C++
<p>Quel est l&rsquo;impact du type de librairie sur la licence du code ?</p>,"<p>Si du code LGPL est utilisé et linker en static pour créer un gros exécutable,  tout le code doit lui aussi être Open Source, si il est linké en dynamic, seules les améliorations à la lib doivent être Open Source.</p>",Code::C++::Compilation::Librairies,C++
<p>Qu&rsquo;est-ce qu&rsquo;un itérateur ?</p>,<p>Un itérateur est un objet qui pointe vers un élément d&rsquo;un conteneur et qui peut être déplacé dans ce dernier. C&rsquo;est une connexion très intéressante à tous les algorithme de la stl.</p>,Code::C++::STL::Itérateur Code::Entretien,C++
<p>Quelle version de C++ permet l&rsquo;utilisation de <code>std::iterator</code>?</p>,<p>Le <code>std::iterator</code> est déprécié en C++17 et sera bientôt supprimé.</p>,Code::C++::STL::Itérateur,C++
<p>Quelles sont les étapes de création d&rsquo;un itérateur ?</p>,"<p>On défini les tags avec using.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">struct</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">Iterator</span><span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span>iterator_category<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>std<span style=""color: #666666"">::</span>forward_iterator_tag;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span>difference_type<span style=""color: #bbbbbb"">   </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>std<span style=""color: #666666"">::</span><span style=""color: #B00040"">ptrdiff_t</span>;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span>value_type<span style=""color: #bbbbbb"">        </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #B00040"">int</span>;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span>pointer<span style=""color: #bbbbbb"">           </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #B00040"">int</span><span style=""color: #666666"">*</span>;<span style=""color: #bbbbbb"">  </span><span style=""color: #3D7B7B; font-style: italic"">// or also value_type*</span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">using</span><span style=""color: #bbbbbb""> </span>reference<span style=""color: #bbbbbb"">         </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #B00040"">int</span><span style=""color: #666666"">&amp;</span>;<span style=""color: #bbbbbb"">  </span><span style=""color: #3D7B7B; font-style: italic"">// or also value_type&amp;</span>
};<span style=""color: #bbbbbb""></span>
</code></pre></div>

<p>On implémente le constructeur</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">struct</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">Iterator</span><span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #3D7B7B; font-style: italic"">// Iterator tags here...</span>
<span style=""color: #bbbbbb"">    </span>Iterator(pointer<span style=""color: #bbbbbb""> </span>ptr)<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">:</span><span style=""color: #bbbbbb""> </span>m_ptr(ptr)<span style=""color: #bbbbbb""> </span>{}<span style=""color: #bbbbbb""></span>
<span style=""color: #008000; font-weight: bold"">private</span><span style=""color: #666666"">:</span><span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span>pointer<span style=""color: #bbbbbb""> </span>m_ptr;<span style=""color: #bbbbbb""></span>
};<span style=""color: #bbbbbb""></span>
</code></pre></div>

<p>On implémente les opérateurs <code>++ptr</code>, <code>ptr++</code>, <code>-&gt;</code>, <code>*</code>, <code>==</code> et <code>!=</code>.<br />
Et finalement on ajoute les fonction <code>begin()</code> et <code>end()</code> à la classe mère.<br />
<a href=""https://www.internalpointers.com/post/writing-custom-iterators-modern-cpp"">Source</a></p>",Code::C++::STL::Itérateur,C++
<p>Quand utiliser un <code>std::array</code> plutôt qu&rsquo;un <code>std::vector</code>et pourquoi ?</p>,"<p>Le <code>std::array</code> est utilisé lorsque le conteneur n&rsquo;a pas besoin d&rsquo;être étendu, il est préférable car le compilateur pourra mieux l&rsquo;optimiser.<br />
La règle de <a href=""http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#slcon2-prefer-using-stl-vector-by-default-unless-you-have-a-reason-to-use-a-different-container"">CppCoreGuideLines</a>est : <strong>If you want to add elements to your container or remove elements from your container, use a std::vector; if not, use a std::array</strong><br />
<a href=""https://www.modernescpp.com/index.php/c-core-guidelines-std-array-and-std-vector-are-your-friends"">Source</a></p>",Code::C++::STL::STL Code::Entretien,C++
<p>Qu&rsquo;est-ce que les templates en C++ ?</p>,<p>C&rsquo;est une technique qui utilise des templates pour faire générer du code par le compilateur qu&rsquo;il viendra ensuite ajouter au reste du code source.</p>,Code::C++::Architecture::Templates Code::Entretien,C++
<p>Quel sont les avantages et inconvénients des templates ?</p>,"<p>Avantage:<br />
Le code est générique, car c&rsquo;est le compilateur qui s&rsquo;occupe de générer le code correspondant.<br />
Inconvénient:<br />
Le temps de compilation est plus long, mais le temps d&rsquo;exécution est plus court.<br />
La lisibilité des templates est très mauvaise, notamment pour les erreurs.</p>",Code::C++::Architecture::Templates Code::Entretien,C++
<p>Qu&rsquo;est-ce que la spécialisation de template ?</p>,<p>La spécialisation consiste à spécifier un comportement particulier en fonction du type du template.</p>,Code::C++::Architecture::Templates Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une classe abstraite ?</p>,"<p>C&rsquo;est une classe qui ne peut pas être instancié car elle a des fonction virtuel pure, qui n&rsquo;ont pas d&rsquo;implémentation.</p>",Code::C++::Architecture::Classe::Classe Code::Entretien,C++
<p>Qu&rsquo;est-ce que la <code>rule of 0</code>?</p>,"<p>Si un objet n&rsquo;a pas besoin d&rsquo;un destructeur, d&rsquo;un constructeur par copie ou assignation, il a très probablement besoin d&rsquo;aucun, et il ne faut pas les écrire, le compilateur est meilleur.<br />
<a href=""https://en.cppreference.com/w/cpp/language/rule_of_three"">Source</a></p>",Code::C++::Architecture::Classe::Classe Code::Entretien,C++
<p>Qu&rsquo;est-ce que la <code>rule of 3</code>?</p>,"<p>Si un objet à besoin d&rsquo;un destructeur, d&rsquo;un constructeur par copie ou par assignation, il a très probablement besoin des trois.<br />
<a href=""https://en.cppreference.com/w/cpp/language/rule_of_three"">Source</a><br />
<a href=""https://stackoverflow.com/questions/9965461/in-what-scenarios-should-i-expect-to-explicitly-need-to-implement-a-move-constru"">Source</a></p>",Code::C++::Architecture::Classe::Classe Code::Entretien,C++
<p>Qu&rsquo;est-ce que la <code>rule of 5</code>?</p>,"<p>La présence d&rsquo;un destructeur, d&rsquo;un constructeur par copie ou d&rsquo;un constructeur par assignation <strong>empêche la création implicite des constructeur/opérateur move</strong>. <br />
Si une classe a <strong>besoin d&rsquo;une semantic de move</strong> et implémente l&rsquo;une des trois fonctions de la <code>rule of 3</code>, elle doit <strong>implémenter les 5 fonctions</strong>.<br />
Ne pas fournir d&rsquo;opérateur et de constructeur de move n&rsquo;est <strong>pas une erreur</strong>, mais <strong>un manque d&rsquo;optimisation</strong>.<br />
<a href=""https://en.cppreference.com/w/cpp/language/rule_of_three"">Source</a><br />
<a href=""https://stackoverflow.com/questions/9965461/in-what-scenarios-should-i-expect-to-explicitly-need-to-implement-a-move-constru"">Source</a></p>",Code::C++::Architecture::Classe::Classe Code::Entretien,C++
<p>Quel syntaxe pour le constructeur/assignation par copy ?</p>,"<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code>T(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>T<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>value)<span style=""color: #bbbbbb""></span>
T<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">operator</span><span style=""color: #666666"">=</span>(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>T<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>other)<span style=""color: #bbbbbb""></span>
</code></pre></div>",Code::C++::Architecture::Classe::Classe,C++
<p>Quel syntaxe pour le constructeur/assignation par move ?</p>,"<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code>T(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>T<span style=""color: #666666"">&amp;&amp;</span><span style=""color: #bbbbbb""> </span>value)<span style=""color: #bbbbbb""></span>
T<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">operator</span><span style=""color: #666666"">=</span>(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>T<span style=""color: #666666"">&amp;&amp;</span><span style=""color: #bbbbbb""> </span>other)<span style=""color: #bbbbbb""></span>
</code></pre></div>",Code::C++::Architecture::Classe::Classe,C++
<p>Qu&rsquo;est-ce que le polymorphisme ?</p>,<p>C&rsquo;est décider quel morceau de code exécuter en fonction du type de quelque chose.</p>,Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Quelles différences entre le static et runtime polymorphisme ?</p>,"<p>Le runtime polymorphisme détermine quel morceau de code à exécuter au moment de l&rsquo;exécution, alors que le polymorphisme static détermine dès la compilation. <br />
Le static polymorphisme est plus rapide que le runtime polymorphisme car pas de recours à la vtable.<br />
Parmi les exemples de polymorphisme static on peut citer l&rsquo;overload de fonction, et polymorphisme dynamique l&rsquo;override de fonction.</p>",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Quelles différences entre l&rsquo;overload et l&rsquo;override de fonction ?</p>,"<p>L&rsquo;overload de fonction c&rsquo;est avoir plusieurs définitions d&rsquo;une fonction en fonction de sa signature, et l&rsquo;override c&rsquo;est l&rsquo;écrasement de la fonction par de l&rsquo;héritage.</p>",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Quand le polymorphisme static ne peut pas fonctionner ?</p>,"<p>Le polymorphisme static ne peut pas fonctionner entre dll ou so, car ils ne sont pas connus à la compilation.</p>
<h2>Classe et fonction virtuelles</h2>
<hr />",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une fonction virtuelle ? Quelle est son impact sur les performances</p>,"<p>C&rsquo;est une fonction qui peut être redéfini par une sous-classe, et donc qui a un pointeur vers la vtable.<br />
Une fonction virtuelle est bien plus coûteuse à appelé.</p>",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une fonction purement virtuelle ? Que peut-on en déduire sur le classe ? Quelle est sa syntaxe ?</p>,"<p>C&rsquo;est une fonction qui n&rsquo;a pas d&rsquo;implémentation, la classe est donc virtuelle elle ne peut pas être instanciée.<br />
La sous-classe doit implémenter les fonctions purement virtuelle.<br />
La syntaxe est <code>virtual void Function() = 0;</code>.</p>",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Qu&rsquo;est-ce que le mot clé <code>virtual</code>?</p>,"<p>Ce mot clé permet de créer une fonction virtuel, c&rsquo;est-à-dire qu&rsquo;elle peut être remplacé au run time par héritage.</p>",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Qu&rsquo;est-ce que la vtable ?</p>,"<p>La vtable est le mécanisme utilisé par la plupart des implémentation du C++ pour permettre le polymorphisme au run time.<br />
Tous les objets ont un tableau de pointeurs de fonction vers ses fonctions virtuelles, appelé vtable.<br />
Quand une fonction virtuelle est appelée on regarde dans la vtable pour choisir quelle fonction appelé. <br />
<a href=""https://stackoverflow.com/questions/3004501/why-do-we-need-a-virtual-table"">Source</a></p>",Code::C++::Architecture::Classe::Polymorphisme Code::Entretien,C++
<p>Quelle précaution doit-on prendre lorsque l&rsquo;on défini l&rsquo;opérateur de copy par assignation ?</p>,"<p>L&rsquo;opérateur doit être constant en cas d&rsquo;auto assignation, exemple:</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code>Class<span style=""color: #bbbbbb""> </span>a;<span style=""color: #bbbbbb""></span>
a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>a;<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">// Ne doit pas changer la valeur de a.</span>
</code></pre></div>",Code::C++::Architecture::Classe::Opérateur_copy_move,C++
<p>Quelle est la meilleur manière d&rsquo;initialiser une variable ? Pour quelles raisons ?</p>,"<p>Il y a plusieurs façons d&rsquo;initialiser, avec <code>()</code>, <code>=</code> ou <code>{}</code>.<br />
L&rsquo;opérateur le plus simple, général et safe pour initialiser est le <code>{}</code> car il empêche les conversions implicites du compilateur, par exemple <code>int a = 2.5;</code> ou <code>int a(2.5);</code> compilent parfaitement et c&rsquo;est un problème.<br />
Attention même les initialisations avec un retour de variable doivent être avec <code>{}</code>, exemple <code>int x{func(a, b)};</code>.<code>De plus l'initialisation avec</code>()<code>nécessite un constructeur par défaut, et un constructeur d'assignation.
Il y a deux exceptions:
- Lorsque l'on souhaite initialiser une liste avec comme paramètre un nombre d'éléments, dans ce cas on utilise</code>()<code>, exemple:</code>std::vector<int> list(4); // 4 integer avec comme valeur 0<code>- Lorsque les deux variables sont d'un même type, on utilise le</code>=`</p>",Code::C++::Architecture::Classe::Opérateur_copy_move,C++
<p>Quelle précaution doit-on apporté au destructeur d&rsquo;une base classe ?</p>,<p>Le destructeur d&rsquo;une base classe doit toujours être virtuel car sinon le destructeur des classes fille ne peuvent pas être appelé ce qui est comportement indéfini.</p>,Code::C++::Architecture::Classe::Destructeur Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;un constructeur ?</p>,<p>C&rsquo;est une fonction membre qui a le nom de la classe et qui initialise ses données membres.</p>,Code::C++::Architecture::Classe::Constructeur Code::Entretien,C++
<p>Qu&rsquo;est-ce que le copie constructeur en C++ ? Quand faut-il en spécifier un ?</p>,"<p>Un copie constructeur c&rsquo;est le constructeur qui permet de construire un objet depuis un autre objet, en copiant ses attributs.<br />
Il faut impérativement en spécifier un si la classe contient un pointeur nu, dans ce cas le pointeur est simplement copié.</p>",Code::C++::Architecture::Classe::Constructeur Code::Entretien,C++
<p>Dans quel cas est-il utile de spécifier un constructeur pour une classe ?</p>,"<p>Lorsqu&rsquo;une classe a un invariant, il est également très courant d&rsquo;ajouter une assertion dans le constructeur pour valider les données.<br />
Un invariant est un attribut qui est censé rester constant pendant toute la durée de vie de l&rsquo;objet et qui n&rsquo;a pas de sens quand elle est initialisé.<br />
Si la classe n&rsquo;a pas d&rsquo;invariant on l&rsquo;initialise directement dans les attributs et on utilise le constructeur par défaut.<br />
<a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c40-define-a-constructor-if-a-class-has-an-invariant"">Source</a></p>",Code::C++::Architecture::Classe::Constructeur,C++
<p>Un constructeur doit-il toujours construire un objet initialisé ?</p>,"<p>OUI, l&rsquo;utilisateur d&rsquo;une classe doit pouvoir considérer que l&rsquo;objet construit est directement utilisable.<br />
Pour résumer il est mauvais d&rsquo;avoir une fonction <code>init()</code>.<br />
<a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c41-a-constructor-should-create-a-fully-initialized-object"">Source</a></p>",Code::C++::Architecture::Classe::Constructeur,C++
<p>Le constructeur par défaut est-il le meilleur moyen d&rsquo;initialiser un objet ?</p>,"<p>NON, si le constructeur par défaut ne fait qu&rsquo;initialiser il ne faut pas l&rsquo;écrire, et utiliser plutôt le constructeur écrit par le compilateur qui est probablement plus rapide. Pour initialiser on utilise plutôt l&rsquo;initialiseur de membre.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">class</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">X1</span><span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">// BAD: doesn&#39;t use member initializers</span>
<span style=""color: #bbbbbb"">    </span>string<span style=""color: #bbbbbb""> </span>s;<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span>i;<span style=""color: #bbbbbb""></span>
<span style=""color: #008000; font-weight: bold"">public</span><span style=""color: #666666"">:</span><span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span>X1()<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">:</span>s{<span style=""color: #BA2121"">&quot;default&quot;</span>},<span style=""color: #bbbbbb""> </span>i{<span style=""color: #666666"">1</span>}<span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""> </span>}<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #3D7B7B; font-style: italic"">// ...</span>
};<span style=""color: #bbbbbb""></span>

<span style=""color: #008000; font-weight: bold"">class</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">X2</span><span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">// GOOD</span>
<span style=""color: #bbbbbb"">    </span>string<span style=""color: #bbbbbb""> </span>s<span style=""color: #bbbbbb""> </span>{<span style=""color: #BA2121"">&quot;default&quot;</span>};<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span>i<span style=""color: #bbbbbb""> </span>{<span style=""color: #666666"">1</span>};<span style=""color: #bbbbbb""></span>
<span style=""color: #008000; font-weight: bold"">public</span><span style=""color: #666666"">:</span><span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #3D7B7B; font-style: italic"">// use compiler-generated default constructor</span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #3D7B7B; font-style: italic"">// ...</span>
};<span style=""color: #bbbbbb""></span>
</code></pre></div>

<p><a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c45-dont-define-a-default-constructor-that-only-initializes-data-members-use-in-class-member-initializers-instead"">Source</a></p>",Code::C++::Architecture::Classe::Constructeur,C++
<p>Le constructeur par défaut est-il générer si une classe à également des constructeurs user-declared ?</p>,"<p>Non, si l&rsquo;on souhaite qu&rsquo;un constructeur par défaut soit généré il faut ajouter <code>A() = default;</code>.</p>",Code::C++::Architecture::Classe::Constructeur,C++
<p>Dans quel cas le constructeur par défaut est-il indispensable ?</p>,"<p>Une classe copiable doit impérativement avoir un constructeur par défaut pour pouvoir être utilisée dans de nombreux constructeurs, comme le constructeur de <code>std::vector&lt;Class&gt;(10);</code>.<br />
Un classe copiable implémente la copie avec <code>=</code>. Théoriquement c&rsquo;est une classe que l&rsquo;on souhaiterait stocker dans un <code>vector</code>.<br />
<a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c43-ensure-that-a-copyable-class-has-a-default-constructor"">Source</a></p>",Code::C++::Architecture::Classe::Constructeur,C++
<p>À quoi sert le pattern pimpl ?</p>,"<p>Optimisation du temps de compilation. Le changement dans l&rsquo;implémentation ne requiert pas une recompilation de tous les composants qui dépendent de l&rsquo;interface. C&rsquo;est très important quand on distribue une lib, un changement interne dans la librairie de déclenche pas la recompilation de toute l&rsquo;application client tant que l&rsquo;interface ne change pas.<br />
Cacher l&rsquo;implémentation complètement quand des binaires précompilé sont distribué. Pimpl permet de ne pas inclure la définition et la déclaration d&rsquo;autres membre privé.</p>",Code::C++::Architecture::Design_pattern::Pimpl Code::Entretien,C++
<p>Qu&rsquo;est-ce que pimpl ?</p>,"<p>C&rsquo;est un design pattern qui consiste à cacher l&rsquo;implémentation d&rsquo;une classe dans un pointeur.<br />
La classe nommé &ldquo;implémentation&rdquo; vers lequel le pointeur pointe est forward-declared dans le header, et son implémentation ainsi que tous les includes sont placés dans le fichier cpp.<br />
<a href=""https://platis.solutions/blog/2021/05/14/cpp-pimpl-tutorial/"">Source</a></p>",Code::C++::Architecture::Design_pattern::Pimpl Code::Entretien,C++
<p>Qu&rsquo;est-ce que friend ?</p>,"<p>Une fonction ou une classe friend peut accéder aux données et fonctions protéger d&rsquo;une autre classe.<br />
C&rsquo;est particulièrement utile pour créer un opérateur.</p>",Code::C++::Syntaxe::Surcharge_opérateurs Code::Entretien,C++
<p>Pour quelle raison doit-on parfois déclarer une surcharge d&rsquo;opérateur comme fonction non-membre ?</p>,"<p>Si la fonction est une fonction membre, le compilateur ne peut pas faire de conversion implicite du membre de gauche de l&rsquo;opération.<br />
Explications:<br />
Soit la déclaration de la classe <code>Rational</code>:</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">class</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">Rational</span><span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb"">  </span>
<span style=""color: #008000; font-weight: bold"">public</span><span style=""color: #666666"">:</span><span style=""color: #bbbbbb"">  </span>
...<span style=""color: #bbbbbb"">  </span>
<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Rational<span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">operator</span><span style=""color: #666666"">*</span>(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Rational<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>rhs)<span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">const</span>;<span style=""color: #bbbbbb"">  </span>
};<span style=""color: #bbbbbb""></span>
</code></pre></div>

<p>Le code <code>result = oneHalf * 2;</code>est converti en <code>result = oneHalf.operator*(2)</code>. Dans ce sens l&rsquo;opérateur fonctionne car le compilateur va faire la conversion implicite de <code>int</code> vers <code>Rational</code>.<br />
En revanche le code <code>result = 2.operator*(oneHalf)</code> ne fonctionnera pas, car le compilateur ne peut pas convertir <code>2</code> car c&rsquo;est cet objet qui appel l&rsquo;operateur.<br />
On veut donc déclarer la fonction comme non-membre et ainsi permettre au compilateur de faire la conversion implicite.</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Rational<span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">operator</span><span style=""color: #666666"">*</span>(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Rational<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>lhs,<span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Rational<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>rhs)<span style=""color: #bbbbbb"">  </span>
{<span style=""color: #bbbbbb"">  </span>
<span style=""color: #bbbbbb"">  </span><span style=""color: #008000; font-weight: bold"">return</span><span style=""color: #bbbbbb""> </span>Rational(lhs.numerator()<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">*</span><span style=""color: #bbbbbb""> </span>rhs.numerator(),<span style=""color: #bbbbbb"">  </span>
<span style=""color: #bbbbbb"">                  </span>lhs.denominator()<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">*</span><span style=""color: #bbbbbb""> </span>rhs.denominator());<span style=""color: #bbbbbb"">  </span>
}<span style=""color: #bbbbbb""></span>
</code></pre></div>

<p><a href=""https://blog.ycshao.com/2017/10/16/effective-c-item-24-declare-non-member-functions-when-type-conversions-should-apply-to-all-parameters/"">Source</a><br />
<a href=""https://stackoverflow.com/questions/2425906/operator-overloading-outside-class"">Source</a></p>",Code::C++::Syntaxe::Surcharge_opérateurs,C++
<p>Qu&rsquo;est-ce que le mot clé <code>explicit</code>en C++ ?</p>,"<p>Le mot clé <code>explicit</code> est utilisé devant les constructeurs, en général avec un seul paramètre, et permet d&rsquo;éviter la conversion implicite par le compilateur lors d&rsquo;un passage par argument d&rsquo;une fonction, ou d&rsquo;un opérateur.<br />
Par exemple le code suivant aurait pu compiler sans le mot clé <code>explicit</code>:</p>
<div class=""codehilite"" style=""background: #f8f8f8""><pre style=""line-height: 125%;""><span></span><code><span style=""color: #008000; font-weight: bold"">class</span><span style=""color: #bbbbbb""> </span><span style=""color: #0000FF; font-weight: bold"">Complexe</span>{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">explicit</span><span style=""color: #bbbbbb""> </span>Complexe(<span style=""color: #B00040"">int</span><span style=""color: #bbbbbb""> </span>val)<span style=""color: #666666"">:</span><span style=""color: #bbbbbb""> </span>a(val),<span style=""color: #bbbbbb""> </span>b(val)<span style=""color: #bbbbbb""> </span>{}<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span>...<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span><span style=""color: #008000; font-weight: bold"">friend</span><span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">operator</span><span style=""color: #666666"">+</span>(<span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Complexe<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>left,<span style=""color: #bbbbbb""> </span><span style=""color: #008000; font-weight: bold"">const</span><span style=""color: #bbbbbb""> </span>Complexe<span style=""color: #666666"">&amp;</span><span style=""color: #bbbbbb""> </span>right)<span style=""color: #bbbbbb""> </span>{<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">        </span>...<span style=""color: #bbbbbb""></span>
<span style=""color: #bbbbbb"">    </span>}<span style=""color: #bbbbbb""></span>
};<span style=""color: #bbbbbb""></span>

Complexe<span style=""color: #bbbbbb""> </span><span style=""color: #0000FF"">a</span>(<span style=""color: #666666"">2</span>);<span style=""color: #bbbbbb"">  </span><span style=""color: #3D7B7B; font-style: italic"">//Crash</span>
Complexe<span style=""color: #bbbbbb""> </span>a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span><span style=""color: #666666"">2</span>;<span style=""color: #bbbbbb""> </span><span style=""color: #3D7B7B; font-style: italic"">//Crash</span>
Complexe<span style=""color: #bbbbbb""> </span>a;<span style=""color: #bbbbbb""></span>
a<span style=""color: #bbbbbb""> </span><span style=""color: #666666"">=</span><span style=""color: #bbbbbb""> </span>a<span style=""color: #666666"">+1</span>;<span style=""color: #bbbbbb"">        </span><span style=""color: #3D7B7B; font-style: italic"">//Crash car le compilateur n&#39;a pas le droit de convertir le 1 en Complexe</span>
</code></pre></div>

<p><a href=""https://stackoverflow.com/questions/121162/what-does-the-explicit-keyword-mean"">Source</a></p>",Code::C++::Syntaxe::Explicit Code::Entretien,C++
<p>Quelle spécificité doit-on apporter à un constructeur avec un seul paramètre ?</p>,"<p>Le mot clé <code>explicit</code> doit être ajouté par défaut pour éviter toute conversion implicite.<br />
<a href=""https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c46-by-default-declare-single-argument-constructors-explicit"">Source</a></p>",Code::C++::Syntaxe::Explicit,C++
<p>Qu&rsquo;est-ce que le mot clé static ?</p>,"<p>Le mot clé static dans une classe permet d&rsquo;avoir un attribut partagé entre toute les instanciation d&rsquo;une classe, ou de déclarer une fonction comme pouvant être utilisée en dehors de la classe, sans instanciation, avec <code>::</code>.</p>",Code::C++::Syntaxe::Syntaxe_C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce qu&rsquo;une fonction inline ?</p>,"<p>C&rsquo;est une fonction dont l&rsquo;appel sera directement remplacer par le code de l&rsquo;implémentation par le compilateur.<br />
La plupart du temps ce mot clé est inutile, le compilateur sait mieux que l&rsquo;humain quand inliner, en revanche il y a deux usages réel:<br />
- spécialiser un template<br />
- déclarer une fonction dans un header, et que cette fonction n&rsquo;est pas dans une classe. <br />
<a href=""https://stackoverflow.com/questions/1759300/when-should-i-write-the-keyword-inline-for-a-function-method"">Source</a></p>
<p>ID: 20230726092750</p>",Code::C++::Syntaxe::Syntaxe_C++ Code::Entretien,C++
<p>Qu&rsquo;est-ce que la commande <code>typedef</code>?</p>,"<p><code>typedef</code> est une fonction qui permet de définir un <strong>alias</strong> à un <strong>type</strong>. Cette commande est lu et utilisée par le compilateur, pas par le pré-processeur.<br />
<a href=""https://stackoverflow.com/questions/516237/when-should-i-use-typedef-in-c?noredirect=1&amp;lq=1"">Source</a></p>",Code::C++::Syntaxe::Typedef Code::Entretien,C++
<p>Qu&rsquo;est-ce que <code>#define</code>?</p>,"<p><code>#define</code> est une directive de pré-processor pour faire une <strong>macro</strong>. Avant même la compilation, le compilateur va remplacer toutes les occurrences dans le code. C&rsquo;est très dangereux et uniquement utilisé en C pour déclarer des variables constantes.</p>",Code::C++::Syntaxe::Typedef Code::Entretien,C++
<p>Quelle est la différence entre <code>#define</code> et <code>typedef</code>?</p>,"<p><code>#define</code> est une directive du pré-processeur qui remplace des bouts de code, alors que <code>typedef</code> est une fonction qui fournit un alias pour une type au niveau du compilateur.<br />
<code>#define</code> ne répond pas au concept de scope contrairement à <code>typedef</code>.</p>",Code::C++::Syntaxe::Typedef Code::Entretien,C++
